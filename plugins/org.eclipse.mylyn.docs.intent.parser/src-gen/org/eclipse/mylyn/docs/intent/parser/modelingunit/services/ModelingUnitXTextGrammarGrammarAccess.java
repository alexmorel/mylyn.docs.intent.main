/*
* generated by Xtext
*/

package org.eclipse.mylyn.docs.intent.parser.modelingunit.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class ModelingUnitXTextGrammarGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class ModelingUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelingUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cModelingUnitAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cUnitNameAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cUnitNameStringWithoutQuotesTerminalRuleCall_1_0 = (RuleCall)cUnitNameAssignment_1.eContents().get(0);
		private final RuleCall cLINE_BREAKTerminalRuleCall_2 = (RuleCall)cGroup.eContents().get(2);
		private final Assignment cResourceAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cResourceResourceReferenceParserRuleCall_3_0 = (RuleCall)cResourceAssignment_3.eContents().get(0);
		private final Assignment cInstructionsAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final Alternatives cInstructionsAlternatives_4_0 = (Alternatives)cInstructionsAssignment_4.eContents().get(0);
		private final RuleCall cInstructionsModelingUnitInstructionParserRuleCall_4_0_0 = (RuleCall)cInstructionsAlternatives_4_0.eContents().get(0);
		private final RuleCall cInstructionsLabelReferenceInstructionParserRuleCall_4_0_1 = (RuleCall)cInstructionsAlternatives_4_0.eContents().get(1);
		private final RuleCall cInstructionsAdressedAnnotationParserRuleCall_4_0_2 = (RuleCall)cInstructionsAlternatives_4_0.eContents().get(2);
		
		//// Entry rule : Beginning of a Modeling Unit.
		//ModelingUnit returns modelingUnit::ModelingUnit:
		//	{modelingUnit::ModelingUnit} // A Modeling Unit may have a name
		//	unitName=StringWithoutQuotes? LINE_BREAK? // A Modeling may be attache to a resource
		//	resource=ResourceReference? // A Modeling Unit is composed of ModelingUnitInstruction or some insctructions avalaible in a Generic Unit.
		//	instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*;
		public ParserRule getRule() { return rule; }

		//{modelingUnit::ModelingUnit} // A Modeling Unit may have a name
		//unitName=StringWithoutQuotes? LINE_BREAK? // A Modeling may be attache to a resource
		//resource=ResourceReference? // A Modeling Unit is composed of ModelingUnitInstruction or some insctructions avalaible in a Generic Unit.
		//instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*
		public Group getGroup() { return cGroup; }

		//{modelingUnit::ModelingUnit}
		public Action getModelingUnitAction_0() { return cModelingUnitAction_0; }

		//unitName=StringWithoutQuotes?
		public Assignment getUnitNameAssignment_1() { return cUnitNameAssignment_1; }

		//StringWithoutQuotes
		public RuleCall getUnitNameStringWithoutQuotesTerminalRuleCall_1_0() { return cUnitNameStringWithoutQuotesTerminalRuleCall_1_0; }

		//LINE_BREAK?
		public RuleCall getLINE_BREAKTerminalRuleCall_2() { return cLINE_BREAKTerminalRuleCall_2; }

		//resource=ResourceReference?
		public Assignment getResourceAssignment_3() { return cResourceAssignment_3; }

		//ResourceReference
		public RuleCall getResourceResourceReferenceParserRuleCall_3_0() { return cResourceResourceReferenceParserRuleCall_3_0; }

		//instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*
		public Assignment getInstructionsAssignment_4() { return cInstructionsAssignment_4; }

		//ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation
		public Alternatives getInstructionsAlternatives_4_0() { return cInstructionsAlternatives_4_0; }

		//ModelingUnitInstruction
		public RuleCall getInstructionsModelingUnitInstructionParserRuleCall_4_0_0() { return cInstructionsModelingUnitInstructionParserRuleCall_4_0_0; }

		//LabelReferenceInstruction
		public RuleCall getInstructionsLabelReferenceInstructionParserRuleCall_4_0_1() { return cInstructionsLabelReferenceInstructionParserRuleCall_4_0_1; }

		//AdressedAnnotation
		public RuleCall getInstructionsAdressedAnnotationParserRuleCall_4_0_2() { return cInstructionsAdressedAnnotationParserRuleCall_4_0_2; }
	}

	public class EBooleanElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EBoolean");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cTrueKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cFalseKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		
		/// * ------------ TOKENS ------------ * / EBoolean returns ecore::EBoolean:
		//	"true" | "false";
		public ParserRule getRule() { return rule; }

		//"true" | "false"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"true"
		public Keyword getTrueKeyword_0() { return cTrueKeyword_0; }

		//"false"
		public Keyword getFalseKeyword_1() { return cFalseKeyword_1; }
	}

	public class EStringElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "EString");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cStringWithQuotesParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStringWithoutQuotesTerminalRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//EString returns ecore::EString:
		//	StringWithQuotes | StringWithoutQuotes;
		public ParserRule getRule() { return rule; }

		//StringWithQuotes | StringWithoutQuotes
		public Alternatives getAlternatives() { return cAlternatives; }

		//StringWithQuotes
		public RuleCall getStringWithQuotesParserRuleCall_0() { return cStringWithQuotesParserRuleCall_0; }

		//StringWithoutQuotes
		public RuleCall getStringWithoutQuotesTerminalRuleCall_1() { return cStringWithoutQuotesTerminalRuleCall_1; }
	}

	public class StringWithQuotesElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StringWithQuotes");
		private final RuleCall cSTRINGTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//// Represents a String with quotes around.
		//StringWithQuotes returns ecore::EString:
		//	STRING;
		public ParserRule getRule() { return rule; }

		//STRING
		public RuleCall getSTRINGTerminalRuleCall() { return cSTRINGTerminalRuleCall; }
	}

	public class UnitInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnitInstruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cSectionReferenceInstructionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cLabelReferenceInstructionParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cAdressedAnnotationParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		/// * ------------ END ENUM AND DATATYPES ------------ * /
		/// * ------------ GENERIC INSTRUCTIONS FROM GENERIC UNIT ------------ * / UnitInstruction returns
		//genericUnit::UnitInstruction:
		//	SectionReferenceInstruction | LabelReferenceInstruction | AdressedAnnotation;
		public ParserRule getRule() { return rule; }

		//SectionReferenceInstruction | LabelReferenceInstruction | AdressedAnnotation
		public Alternatives getAlternatives() { return cAlternatives; }

		//SectionReferenceInstruction
		public RuleCall getSectionReferenceInstructionParserRuleCall_0() { return cSectionReferenceInstructionParserRuleCall_0; }

		//LabelReferenceInstruction
		public RuleCall getLabelReferenceInstructionParserRuleCall_1() { return cLabelReferenceInstructionParserRuleCall_1; }

		//AdressedAnnotation
		public RuleCall getAdressedAnnotationParserRuleCall_2() { return cAdressedAnnotationParserRuleCall_2; }
	}

	public class LabelReferenceInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LabelReferenceInstruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cTypeTypeLabelEnumRuleCall_1_0 = (RuleCall)cTypeAssignment_1.eContents().get(0);
		private final Assignment cReferencedLabelAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cReferencedLabelLabelDeclarationReferenceParserRuleCall_2_0 = (RuleCall)cReferencedLabelAssignment_2.eContents().get(0);
		private final Assignment cLineBreakAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_3_0 = (RuleCall)cLineBreakAssignment_3.eContents().get(0);
		
		//LabelReferenceInstruction returns genericUnit::LabelReferenceInstruction:
		//	"@see" //COMMENT RENSEIGNER CE TYPE ? 
		//	type=TypeLabel referencedLabel=LabelDeclarationReference lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//"@see" //COMMENT RENSEIGNER CE TYPE ? 
		//type=TypeLabel referencedLabel=LabelDeclarationReference lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//"@see"
		public Keyword getSeeKeyword_0() { return cSeeKeyword_0; }

		////COMMENT RENSEIGNER CE TYPE ? 
		//type=TypeLabel
		public Assignment getTypeAssignment_1() { return cTypeAssignment_1; }

		//TypeLabel
		public RuleCall getTypeTypeLabelEnumRuleCall_1_0() { return cTypeTypeLabelEnumRuleCall_1_0; }

		//referencedLabel=LabelDeclarationReference
		public Assignment getReferencedLabelAssignment_2() { return cReferencedLabelAssignment_2; }

		//LabelDeclarationReference
		public RuleCall getReferencedLabelLabelDeclarationReferenceParserRuleCall_2_0() { return cReferencedLabelLabelDeclarationReferenceParserRuleCall_2_0; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_3() { return cLineBreakAssignment_3; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_3_0() { return cLineBreakLINE_BREAKTerminalRuleCall_3_0; }
	}

	public class SectionReferenceInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionReferenceInstruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferencedObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0 = (RuleCall)cReferencedObjectAssignment_1.eContents().get(0);
		private final Assignment cTextToPrintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextToPrintEStringParserRuleCall_2_0 = (RuleCall)cTextToPrintAssignment_2.eContents().get(0);
		private final Assignment cLineBreakAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_3_0 = (RuleCall)cLineBreakAssignment_3.eContents().get(0);
		
		//SectionReferenceInstruction returns genericUnit::IntentSectionReferenceInstruction:
		//	"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//"@see"
		public Keyword getSeeKeyword_0() { return cSeeKeyword_0; }

		//referencedObject=SectionOrParagraphReference
		public Assignment getReferencedObjectAssignment_1() { return cReferencedObjectAssignment_1; }

		//SectionOrParagraphReference
		public RuleCall getReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0() { return cReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0; }

		//textToPrint=EString?
		public Assignment getTextToPrintAssignment_2() { return cTextToPrintAssignment_2; }

		//EString
		public RuleCall getTextToPrintEStringParserRuleCall_2_0() { return cTextToPrintEStringParserRuleCall_2_0; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_3() { return cLineBreakAssignment_3; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_3_0() { return cLineBreakLINE_BREAKTerminalRuleCall_3_0; }
	}

	public class AdressedAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AdressedAnnotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cLineBreakAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final Keyword cLineBreakLineBreakKeyword_0_0 = (Keyword)cLineBreakAssignment_0.eContents().get(0);
		private final Keyword cAdressedAnnotationKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Keyword cLeftCurlyBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Keyword cReceiverKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Keyword cLeftCurlyBracketKeyword_4 = (Keyword)cGroup.eContents().get(4);
		private final Assignment cReceiverAssignment_5 = (Assignment)cGroup.eContents().get(5);
		private final RuleCall cReceiverEStringParserRuleCall_5_0 = (RuleCall)cReceiverAssignment_5.eContents().get(0);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cCommaKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Assignment cReceiverAssignment_6_1 = (Assignment)cGroup_6.eContents().get(1);
		private final RuleCall cReceiverEStringParserRuleCall_6_1_0 = (RuleCall)cReceiverAssignment_6_1.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_7 = (Keyword)cGroup.eContents().get(7);
		private final Keyword cSourceKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cSourceAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cSourceEStringParserRuleCall_9_0 = (RuleCall)cSourceAssignment_9.eContents().get(0);
		private final Keyword cMessageKeyword_10 = (Keyword)cGroup.eContents().get(10);
		private final Assignment cMessageAssignment_11 = (Assignment)cGroup.eContents().get(11);
		private final RuleCall cMessageEStringParserRuleCall_11_0 = (RuleCall)cMessageAssignment_11.eContents().get(0);
		private final Keyword cTypeKeyword_12 = (Keyword)cGroup.eContents().get(12);
		private final Assignment cTypeAssignment_13 = (Assignment)cGroup.eContents().get(13);
		private final RuleCall cTypeEStringParserRuleCall_13_0 = (RuleCall)cTypeAssignment_13.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_14 = (Keyword)cGroup.eContents().get(14);
		
		//AdressedAnnotation returns genericUnit::AdressedAnnotation:
		//	lineBreak?="lineBreak"? "AdressedAnnotation" "{" "receiver" "{" receiver+=EString ("," receiver+=EString)* "}"
		//	"source" source=EString "message" message=EString "type" type=EString "}";
		public ParserRule getRule() { return rule; }

		//lineBreak?="lineBreak"? "AdressedAnnotation" "{" "receiver" "{" receiver+=EString ("," receiver+=EString)* "}" "source"
		//source=EString "message" message=EString "type" type=EString "}"
		public Group getGroup() { return cGroup; }

		//lineBreak?="lineBreak"?
		public Assignment getLineBreakAssignment_0() { return cLineBreakAssignment_0; }

		//"lineBreak"
		public Keyword getLineBreakLineBreakKeyword_0_0() { return cLineBreakLineBreakKeyword_0_0; }

		//"AdressedAnnotation"
		public Keyword getAdressedAnnotationKeyword_1() { return cAdressedAnnotationKeyword_1; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_2() { return cLeftCurlyBracketKeyword_2; }

		//"receiver"
		public Keyword getReceiverKeyword_3() { return cReceiverKeyword_3; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_4() { return cLeftCurlyBracketKeyword_4; }

		//receiver+=EString
		public Assignment getReceiverAssignment_5() { return cReceiverAssignment_5; }

		//EString
		public RuleCall getReceiverEStringParserRuleCall_5_0() { return cReceiverEStringParserRuleCall_5_0; }

		//("," receiver+=EString)*
		public Group getGroup_6() { return cGroup_6; }

		//","
		public Keyword getCommaKeyword_6_0() { return cCommaKeyword_6_0; }

		//receiver+=EString
		public Assignment getReceiverAssignment_6_1() { return cReceiverAssignment_6_1; }

		//EString
		public RuleCall getReceiverEStringParserRuleCall_6_1_0() { return cReceiverEStringParserRuleCall_6_1_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_7() { return cRightCurlyBracketKeyword_7; }

		//"source"
		public Keyword getSourceKeyword_8() { return cSourceKeyword_8; }

		//source=EString
		public Assignment getSourceAssignment_9() { return cSourceAssignment_9; }

		//EString
		public RuleCall getSourceEStringParserRuleCall_9_0() { return cSourceEStringParserRuleCall_9_0; }

		//"message"
		public Keyword getMessageKeyword_10() { return cMessageKeyword_10; }

		//message=EString
		public Assignment getMessageAssignment_11() { return cMessageAssignment_11; }

		//EString
		public RuleCall getMessageEStringParserRuleCall_11_0() { return cMessageEStringParserRuleCall_11_0; }

		//"type"
		public Keyword getTypeKeyword_12() { return cTypeKeyword_12; }

		//type=EString
		public Assignment getTypeAssignment_13() { return cTypeAssignment_13; }

		//EString
		public RuleCall getTypeEStringParserRuleCall_13_0() { return cTypeEStringParserRuleCall_13_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_14() { return cRightCurlyBracketKeyword_14; }
	}

	public class SectionOrParagraphReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionOrParagraphReference");
		private final Assignment cIntentHrefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIntentHrefStringWithQuotesParserRuleCall_0 = (RuleCall)cIntentHrefAssignment.eContents().get(0);
		
		/// *	('referencedObject' referencedObject=[markup::StructureElement|EString])?
		//    '}'* /SectionOrParagraphReference returns document::IntentSectionOrParagraphReference:
		//	IntentHref=StringWithQuotes;
		public ParserRule getRule() { return rule; }

		//IntentHref=StringWithQuotes
		public Assignment getIntentHrefAssignment() { return cIntentHrefAssignment; }

		//StringWithQuotes
		public RuleCall getIntentHrefStringWithQuotesParserRuleCall_0() { return cIntentHrefStringWithQuotesParserRuleCall_0; }
	}

	public class UnitInstructionReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnitInstructionReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHrefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIntentHrefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIntentHrefEStringParserRuleCall_1_0 = (RuleCall)cIntentHrefAssignment_1.eContents().get(0);
		
		//UnitInstructionReference returns genericUnit::UnitInstructionReference:
		//	"href" IntentHref=EString;
		public ParserRule getRule() { return rule; }

		//"href" IntentHref=EString
		public Group getGroup() { return cGroup; }

		//"href"
		public Keyword getHrefKeyword_0() { return cHrefKeyword_0; }

		//IntentHref=EString
		public Assignment getIntentHrefAssignment_1() { return cIntentHrefAssignment_1; }

		//EString
		public RuleCall getIntentHrefEStringParserRuleCall_1_0() { return cIntentHrefEStringParserRuleCall_1_0; }
	}

	public class LabelDeclarationReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LabelDeclarationReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cHrefKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIntentHrefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIntentHrefEStringParserRuleCall_1_0 = (RuleCall)cIntentHrefAssignment_1.eContents().get(0);
		private final Group cGroup_2 = (Group)cGroup.eContents().get(2);
		private final Keyword cReferencedElementKeyword_2_0 = (Keyword)cGroup_2.eContents().get(0);
		private final Assignment cReferencedElementAssignment_2_1 = (Assignment)cGroup_2.eContents().get(1);
		private final CrossReference cReferencedElementLabelDeclarationCrossReference_2_1_0 = (CrossReference)cReferencedElementAssignment_2_1.eContents().get(0);
		private final RuleCall cReferencedElementLabelDeclarationEStringParserRuleCall_2_1_0_1 = (RuleCall)cReferencedElementLabelDeclarationCrossReference_2_1_0.eContents().get(1);
		
		//LabelDeclarationReference returns genericUnit::LabelDeclarationReference:
		//	"href" IntentHref=EString ("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?;
		public ParserRule getRule() { return rule; }

		//"href" IntentHref=EString ("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?
		public Group getGroup() { return cGroup; }

		//"href"
		public Keyword getHrefKeyword_0() { return cHrefKeyword_0; }

		//IntentHref=EString
		public Assignment getIntentHrefAssignment_1() { return cIntentHrefAssignment_1; }

		//EString
		public RuleCall getIntentHrefEStringParserRuleCall_1_0() { return cIntentHrefEStringParserRuleCall_1_0; }

		//("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?
		public Group getGroup_2() { return cGroup_2; }

		//"referencedElement"
		public Keyword getReferencedElementKeyword_2_0() { return cReferencedElementKeyword_2_0; }

		//referencedElement=[genericUnit::LabelDeclaration|EString]
		public Assignment getReferencedElementAssignment_2_1() { return cReferencedElementAssignment_2_1; }

		//[genericUnit::LabelDeclaration|EString]
		public CrossReference getReferencedElementLabelDeclarationCrossReference_2_1_0() { return cReferencedElementLabelDeclarationCrossReference_2_1_0; }

		//EString
		public RuleCall getReferencedElementLabelDeclarationEStringParserRuleCall_2_1_0_1() { return cReferencedElementLabelDeclarationEStringParserRuleCall_2_1_0_1; }
	}

	public class ModelingUnitInstructionReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelingUnitInstructionReference");
		private final RuleCall cModelingUnitInstructionReference_ImplParserRuleCall = (RuleCall)rule.eContents().get(1);
		
		/// * ------------ END GENERIC INSTRUCTIONS FROM GENERIC UNIT ------------ * /
		/// * ------------ INSTRUCTIONS FROM MODELING UNIT ------------ * / ModelingUnitInstructionReference returns
		//modelingUnit::ModelingUnitInstructionReference:
		//	ModelingUnitInstructionReference_Impl;
		public ParserRule getRule() { return rule; }

		//ModelingUnitInstructionReference_Impl
		public RuleCall getModelingUnitInstructionReference_ImplParserRuleCall() { return cModelingUnitInstructionReference_ImplParserRuleCall; }
	}

	public class ModelingUnitInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelingUnitInstruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInstanceLevelInstructionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cResourceDeclarationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cContributionInstructionParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		private final RuleCall cAnnotationDeclarationParserRuleCall_3 = (RuleCall)cAlternatives.eContents().get(3);
		private final RuleCall cSectionReferenceinModelingUnitParserRuleCall_4 = (RuleCall)cAlternatives.eContents().get(4);
		private final RuleCall cLabelinModelingUnitParserRuleCall_5 = (RuleCall)cAlternatives.eContents().get(5);
		
		//ModelingUnitInstruction returns modelingUnit::ModelingUnitInstruction:
		//	InstanceLevelInstruction | ResourceDeclaration | ContributionInstruction | AnnotationDeclaration |
		//	SectionReferenceinModelingUnit | LabelinModelingUnit;
		public ParserRule getRule() { return rule; }

		//InstanceLevelInstruction | ResourceDeclaration | ContributionInstruction | AnnotationDeclaration |
		//SectionReferenceinModelingUnit | LabelinModelingUnit
		public Alternatives getAlternatives() { return cAlternatives; }

		//InstanceLevelInstruction
		public RuleCall getInstanceLevelInstructionParserRuleCall_0() { return cInstanceLevelInstructionParserRuleCall_0; }

		//ResourceDeclaration
		public RuleCall getResourceDeclarationParserRuleCall_1() { return cResourceDeclarationParserRuleCall_1; }

		//ContributionInstruction
		public RuleCall getContributionInstructionParserRuleCall_2() { return cContributionInstructionParserRuleCall_2; }

		//AnnotationDeclaration
		public RuleCall getAnnotationDeclarationParserRuleCall_3() { return cAnnotationDeclarationParserRuleCall_3; }

		//SectionReferenceinModelingUnit
		public RuleCall getSectionReferenceinModelingUnitParserRuleCall_4() { return cSectionReferenceinModelingUnitParserRuleCall_4; }

		//LabelinModelingUnit
		public RuleCall getLabelinModelingUnitParserRuleCall_5() { return cLabelinModelingUnitParserRuleCall_5; }
	}

	public class InstanceLevelInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstanceLevelInstruction");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cInstanciationInstructionParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cStructuralFeatureAffectationParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		
		//InstanceLevelInstruction returns modelingUnit::InstanceLevelInstruction:
		//	InstanciationInstruction | StructuralFeatureAffectation;
		public ParserRule getRule() { return rule; }

		//InstanciationInstruction | StructuralFeatureAffectation
		public Alternatives getAlternatives() { return cAlternatives; }

		//InstanciationInstruction
		public RuleCall getInstanciationInstructionParserRuleCall_0() { return cInstanciationInstructionParserRuleCall_0; }

		//StructuralFeatureAffectation
		public RuleCall getStructuralFeatureAffectationParserRuleCall_1() { return cStructuralFeatureAffectationParserRuleCall_1; }
	}

	public class ValueForStructuralFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ValueForStructuralFeature");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final RuleCall cNativeValueForStructuralFeatureParserRuleCall_0 = (RuleCall)cAlternatives.eContents().get(0);
		private final RuleCall cReferenceValueForStructuralFeatureParserRuleCall_1 = (RuleCall)cAlternatives.eContents().get(1);
		private final RuleCall cNewObjectValueForStructuralFeatureParserRuleCall_2 = (RuleCall)cAlternatives.eContents().get(2);
		
		//ValueForStructuralFeature returns modelingUnit::ValueForStructuralFeature:
		//	NativeValueForStructuralFeature | ReferenceValueForStructuralFeature | NewObjectValueForStructuralFeature;
		public ParserRule getRule() { return rule; }

		//NativeValueForStructuralFeature | ReferenceValueForStructuralFeature | NewObjectValueForStructuralFeature
		public Alternatives getAlternatives() { return cAlternatives; }

		//NativeValueForStructuralFeature
		public RuleCall getNativeValueForStructuralFeatureParserRuleCall_0() { return cNativeValueForStructuralFeatureParserRuleCall_0; }

		//ReferenceValueForStructuralFeature
		public RuleCall getReferenceValueForStructuralFeatureParserRuleCall_1() { return cReferenceValueForStructuralFeatureParserRuleCall_1; }

		//NewObjectValueForStructuralFeature
		public RuleCall getNewObjectValueForStructuralFeatureParserRuleCall_2() { return cNewObjectValueForStructuralFeatureParserRuleCall_2; }
	}

	public class ModelingUnitInstructionReference_ImplElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModelingUnitInstructionReference_Impl");
		private final Assignment cIntentHrefAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cIntentHrefStringWithoutQuotesTerminalRuleCall_0 = (RuleCall)cIntentHrefAssignment.eContents().get(0);
		
		//ModelingUnitInstructionReference_Impl returns modelingUnit::ModelingUnitInstructionReference:
		//	IntentHref=StringWithoutQuotes;
		public ParserRule getRule() { return rule; }

		//IntentHref=StringWithoutQuotes
		public Assignment getIntentHrefAssignment() { return cIntentHrefAssignment; }

		//StringWithoutQuotes
		public RuleCall getIntentHrefStringWithoutQuotesTerminalRuleCall_0() { return cIntentHrefStringWithoutQuotesTerminalRuleCall_0; }
	}

	public class SectionReferenceinModelingUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SectionReferenceinModelingUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cSeeKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cReferencedObjectAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0 = (RuleCall)cReferencedObjectAssignment_1.eContents().get(0);
		private final Assignment cTextToPrintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextToPrintEStringParserRuleCall_2_0 = (RuleCall)cTextToPrintAssignment_2.eContents().get(0);
		private final Assignment cLineBreakAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_3_0 = (RuleCall)cLineBreakAssignment_3.eContents().get(0);
		
		//SectionReferenceinModelingUnit returns modelingUnit::IntentSectionReferenceinModelingUnit:
		//	"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//"@see"
		public Keyword getSeeKeyword_0() { return cSeeKeyword_0; }

		//referencedObject=SectionOrParagraphReference
		public Assignment getReferencedObjectAssignment_1() { return cReferencedObjectAssignment_1; }

		//SectionOrParagraphReference
		public RuleCall getReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0() { return cReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0; }

		//textToPrint=EString?
		public Assignment getTextToPrintAssignment_2() { return cTextToPrintAssignment_2; }

		//EString
		public RuleCall getTextToPrintEStringParserRuleCall_2_0() { return cTextToPrintEStringParserRuleCall_2_0; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_3() { return cLineBreakAssignment_3; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_3_0() { return cLineBreakLINE_BREAKTerminalRuleCall_3_0; }
	}

	public class LabelinModelingUnitElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "LabelinModelingUnit");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cTypeAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cTypeTypeLabelEnumRuleCall_0_0 = (RuleCall)cTypeAssignment_0.eContents().get(0);
		private final Assignment cLabelValueAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLabelValueEStringParserRuleCall_1_0 = (RuleCall)cLabelValueAssignment_1.eContents().get(0);
		private final Assignment cTextToPrintAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cTextToPrintEStringParserRuleCall_2_0 = (RuleCall)cTextToPrintAssignment_2.eContents().get(0);
		private final Assignment cLineBreakAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_3_0 = (RuleCall)cLineBreakAssignment_3.eContents().get(0);
		
		//LabelinModelingUnit returns modelingUnit::LabelinModelingUnit:
		//	type=TypeLabel labelValue=EString textToPrint=EString? lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//type=TypeLabel labelValue=EString textToPrint=EString? lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//type=TypeLabel
		public Assignment getTypeAssignment_0() { return cTypeAssignment_0; }

		//TypeLabel
		public RuleCall getTypeTypeLabelEnumRuleCall_0_0() { return cTypeTypeLabelEnumRuleCall_0_0; }

		//labelValue=EString
		public Assignment getLabelValueAssignment_1() { return cLabelValueAssignment_1; }

		//EString
		public RuleCall getLabelValueEStringParserRuleCall_1_0() { return cLabelValueEStringParserRuleCall_1_0; }

		//textToPrint=EString?
		public Assignment getTextToPrintAssignment_2() { return cTextToPrintAssignment_2; }

		//EString
		public RuleCall getTextToPrintEStringParserRuleCall_2_0() { return cTextToPrintEStringParserRuleCall_2_0; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_3() { return cLineBreakAssignment_3; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_3_0() { return cLineBreakLINE_BREAKTerminalRuleCall_3_0; }
	}

	public class AnnotationDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cAnnotationKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cAnnotationIDAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cAnnotationIDStringWithoutQuotesTerminalRuleCall_1_0 = (RuleCall)cAnnotationIDAssignment_1.eContents().get(0);
		private final Assignment cMapAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cMapKeyValForAnnotationParserRuleCall_2_0 = (RuleCall)cMapAssignment_2.eContents().get(0);
		private final Group cGroup_3 = (Group)cGroup.eContents().get(3);
		private final Keyword cCommaKeyword_3_0 = (Keyword)cGroup_3.eContents().get(0);
		private final Assignment cMapAssignment_3_1 = (Assignment)cGroup_3.eContents().get(1);
		private final RuleCall cMapKeyValForAnnotationParserRuleCall_3_1_0 = (RuleCall)cMapAssignment_3_1.eContents().get(0);
		private final Assignment cLineBreakAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_4_0 = (RuleCall)cLineBreakAssignment_4.eContents().get(0);
		
		//AnnotationDeclaration returns modelingUnit::AnnotationDeclaration:
		//	"@Annotation" annotationID=StringWithoutQuotes map+=KeyValForAnnotation ("," map+=KeyValForAnnotation)*
		//	lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//"@Annotation" annotationID=StringWithoutQuotes map+=KeyValForAnnotation ("," map+=KeyValForAnnotation)*
		//lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//"@Annotation"
		public Keyword getAnnotationKeyword_0() { return cAnnotationKeyword_0; }

		//annotationID=StringWithoutQuotes
		public Assignment getAnnotationIDAssignment_1() { return cAnnotationIDAssignment_1; }

		//StringWithoutQuotes
		public RuleCall getAnnotationIDStringWithoutQuotesTerminalRuleCall_1_0() { return cAnnotationIDStringWithoutQuotesTerminalRuleCall_1_0; }

		//map+=KeyValForAnnotation
		public Assignment getMapAssignment_2() { return cMapAssignment_2; }

		//KeyValForAnnotation
		public RuleCall getMapKeyValForAnnotationParserRuleCall_2_0() { return cMapKeyValForAnnotationParserRuleCall_2_0; }

		//("," map+=KeyValForAnnotation)*
		public Group getGroup_3() { return cGroup_3; }

		//","
		public Keyword getCommaKeyword_3_0() { return cCommaKeyword_3_0; }

		//map+=KeyValForAnnotation
		public Assignment getMapAssignment_3_1() { return cMapAssignment_3_1; }

		//KeyValForAnnotation
		public RuleCall getMapKeyValForAnnotationParserRuleCall_3_1_0() { return cMapKeyValForAnnotationParserRuleCall_3_1_0; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_4() { return cLineBreakAssignment_4; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_4_0() { return cLineBreakLINE_BREAKTerminalRuleCall_4_0; }
	}

	public class InstanciationInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstanciationInstruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cNewKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cMetaTypeAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cMetaTypeTypeReferenceParserRuleCall_1_0 = (RuleCall)cMetaTypeAssignment_1.eContents().get(0);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameStringWithoutQuotesTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cStructuralFeaturesAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cStructuralFeaturesStructuralFeatureAffectationParserRuleCall_4_0 = (RuleCall)cStructuralFeaturesAssignment_4.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_5 = (Keyword)cGroup.eContents().get(5);
		private final Assignment cLineBreakAssignment_6 = (Assignment)cGroup.eContents().get(6);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_6_0 = (RuleCall)cLineBreakAssignment_6.eContents().get(0);
		
		//InstanciationInstruction returns modelingUnit::InstanciationInstruction:
		//	"new" metaType=TypeReference name=StringWithoutQuotes? "{" structuralFeatures+=StructuralFeatureAffectation* "}"
		//	lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//"new" metaType=TypeReference name=StringWithoutQuotes? "{" structuralFeatures+=StructuralFeatureAffectation* "}"
		//lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//"new"
		public Keyword getNewKeyword_0() { return cNewKeyword_0; }

		//metaType=TypeReference
		public Assignment getMetaTypeAssignment_1() { return cMetaTypeAssignment_1; }

		//TypeReference
		public RuleCall getMetaTypeTypeReferenceParserRuleCall_1_0() { return cMetaTypeTypeReferenceParserRuleCall_1_0; }

		//name=StringWithoutQuotes?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//StringWithoutQuotes
		public RuleCall getNameStringWithoutQuotesTerminalRuleCall_2_0() { return cNameStringWithoutQuotesTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//structuralFeatures+=StructuralFeatureAffectation*
		public Assignment getStructuralFeaturesAssignment_4() { return cStructuralFeaturesAssignment_4; }

		//StructuralFeatureAffectation
		public RuleCall getStructuralFeaturesStructuralFeatureAffectationParserRuleCall_4_0() { return cStructuralFeaturesStructuralFeatureAffectationParserRuleCall_4_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_5() { return cRightCurlyBracketKeyword_5; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_6() { return cLineBreakAssignment_6; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_6_0() { return cLineBreakLINE_BREAKTerminalRuleCall_6_0; }
	}

	public class StructuralFeatureAffectationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "StructuralFeatureAffectation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cNameAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cNameStringWithoutQuotesTerminalRuleCall_0_0 = (RuleCall)cNameAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Assignment cUsedOperatorAssignment_1_0 = (Assignment)cGroup_1.eContents().get(0);
		private final RuleCall cUsedOperatorAffectationOperatorEnumRuleCall_1_0_0 = (RuleCall)cUsedOperatorAssignment_1_0.eContents().get(0);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cGroup_1.eContents().get(1);
		private final Assignment cValuesAssignment_1_1_0 = (Assignment)cAlternatives_1_1.eContents().get(0);
		private final RuleCall cValuesValueForStructuralFeatureParserRuleCall_1_1_0_0 = (RuleCall)cValuesAssignment_1_1_0.eContents().get(0);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_1_1_1_0 = (Keyword)cGroup_1_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_1_1 = (Assignment)cGroup_1_1_1.eContents().get(1);
		private final RuleCall cValuesValueForStructuralFeatureParserRuleCall_1_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_1_1.eContents().get(0);
		private final Group cGroup_1_1_1_2 = (Group)cGroup_1_1_1.eContents().get(2);
		private final Keyword cCommaKeyword_1_1_1_2_0 = (Keyword)cGroup_1_1_1_2.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_1_2_1 = (Assignment)cGroup_1_1_1_2.eContents().get(1);
		private final RuleCall cValuesValueForStructuralFeatureParserRuleCall_1_1_1_2_1_0 = (RuleCall)cValuesAssignment_1_1_1_2_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_1_1_1_3 = (Keyword)cGroup_1_1_1.eContents().get(3);
		private final Keyword cSemicolonKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLineBreakAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_3_0 = (RuleCall)cLineBreakAssignment_3.eContents().get(0);
		
		//StructuralFeatureAffectation returns modelingUnit::StructuralFeatureAffectation: //metaType=TypeReference
		//	name=StringWithoutQuotes (usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "["
		//	values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]")) ";" lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		////metaType=TypeReference
		//name=StringWithoutQuotes (usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "["
		//values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]")) ";" lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		////metaType=TypeReference
		//name=StringWithoutQuotes
		public Assignment getNameAssignment_0() { return cNameAssignment_0; }

		//StringWithoutQuotes
		public RuleCall getNameStringWithoutQuotesTerminalRuleCall_0_0() { return cNameStringWithoutQuotesTerminalRuleCall_0_0; }

		//usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "[" values+=ValueForStructuralFeature (","
		//values+=ValueForStructuralFeature)* "]")
		public Group getGroup_1() { return cGroup_1; }

		//usedOperator=AffectationOperator
		public Assignment getUsedOperatorAssignment_1_0() { return cUsedOperatorAssignment_1_0; }

		//AffectationOperator
		public RuleCall getUsedOperatorAffectationOperatorEnumRuleCall_1_0_0() { return cUsedOperatorAffectationOperatorEnumRuleCall_1_0_0; }

		//values+=ValueForStructuralFeature | "[" values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]"
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//values+=ValueForStructuralFeature
		public Assignment getValuesAssignment_1_1_0() { return cValuesAssignment_1_1_0; }

		//ValueForStructuralFeature
		public RuleCall getValuesValueForStructuralFeatureParserRuleCall_1_1_0_0() { return cValuesValueForStructuralFeatureParserRuleCall_1_1_0_0; }

		//"[" values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]"
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//"["
		public Keyword getLeftSquareBracketKeyword_1_1_1_0() { return cLeftSquareBracketKeyword_1_1_1_0; }

		//values+=ValueForStructuralFeature
		public Assignment getValuesAssignment_1_1_1_1() { return cValuesAssignment_1_1_1_1; }

		//ValueForStructuralFeature
		public RuleCall getValuesValueForStructuralFeatureParserRuleCall_1_1_1_1_0() { return cValuesValueForStructuralFeatureParserRuleCall_1_1_1_1_0; }

		//("," values+=ValueForStructuralFeature)*
		public Group getGroup_1_1_1_2() { return cGroup_1_1_1_2; }

		//","
		public Keyword getCommaKeyword_1_1_1_2_0() { return cCommaKeyword_1_1_1_2_0; }

		//values+=ValueForStructuralFeature
		public Assignment getValuesAssignment_1_1_1_2_1() { return cValuesAssignment_1_1_1_2_1; }

		//ValueForStructuralFeature
		public RuleCall getValuesValueForStructuralFeatureParserRuleCall_1_1_1_2_1_0() { return cValuesValueForStructuralFeatureParserRuleCall_1_1_1_2_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_1_1_1_3() { return cRightSquareBracketKeyword_1_1_1_3; }

		//";"
		public Keyword getSemicolonKeyword_2() { return cSemicolonKeyword_2; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_3() { return cLineBreakAssignment_3; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_3_0() { return cLineBreakLINE_BREAKTerminalRuleCall_3_0; }
	}

	public class NativeValueForStructuralFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NativeValueForStructuralFeature");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cValueStringWithQuotesParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Assignment cLineBreakAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_1_0 = (RuleCall)cLineBreakAssignment_1.eContents().get(0);
		
		//NativeValueForStructuralFeature returns modelingUnit::NativeValueForStructuralFeature:
		//	value=StringWithQuotes lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//value=StringWithQuotes lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//value=StringWithQuotes
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//StringWithQuotes
		public RuleCall getValueStringWithQuotesParserRuleCall_0_0() { return cValueStringWithQuotesParserRuleCall_0_0; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_1() { return cLineBreakAssignment_1; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_1_0() { return cLineBreakLINE_BREAKTerminalRuleCall_1_0; }
	}

	public class NewObjectValueForStructuralFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NewObjectValueForStructuralFeature");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cValueInstanciationInstructionParserRuleCall_0 = (RuleCall)cValueAssignment.eContents().get(0);
		
		//NewObjectValueForStructuralFeature returns modelingUnit::NewObjectValueForStructuralFeature:
		//	value=InstanciationInstruction;
		public ParserRule getRule() { return rule; }

		//value=InstanciationInstruction
		public Assignment getValueAssignment() { return cValueAssignment; }

		//InstanciationInstruction
		public RuleCall getValueInstanciationInstructionParserRuleCall_0() { return cValueInstanciationInstructionParserRuleCall_0; }
	}

	public class ReferenceValueForStructuralFeatureElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ReferenceValueForStructuralFeature");
		private final Assignment cReferencedElementAssignment = (Assignment)rule.eContents().get(1);
		private final RuleCall cReferencedElementInstanciationInstructionReferenceParserRuleCall_0 = (RuleCall)cReferencedElementAssignment.eContents().get(0);
		
		//ReferenceValueForStructuralFeature returns modelingUnit::ReferenceValueForStructuralFeature:
		//	referencedElement=InstanciationInstructionReference;
		public ParserRule getRule() { return rule; }

		//referencedElement=InstanciationInstructionReference
		public Assignment getReferencedElementAssignment() { return cReferencedElementAssignment; }

		//InstanciationInstructionReference
		public RuleCall getReferencedElementInstanciationInstructionReferenceParserRuleCall_0() { return cReferencedElementInstanciationInstructionReferenceParserRuleCall_0; }
	}

	public class ContributionInstructionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ContributionInstruction");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Assignment cReferencedElementAssignment_0 = (Assignment)cGroup.eContents().get(0);
		private final RuleCall cReferencedElementModelingUnitInstructionReferenceParserRuleCall_0_0 = (RuleCall)cReferencedElementAssignment_0.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cContributionsAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cContributionsModelingUnitInstructionParserRuleCall_2_0 = (RuleCall)cContributionsAssignment_2.eContents().get(0);
		private final Keyword cRightCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final Assignment cLineBreakAssignment_4 = (Assignment)cGroup.eContents().get(4);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_4_0 = (RuleCall)cLineBreakAssignment_4.eContents().get(0);
		
		//ContributionInstruction returns modelingUnit::ContributionInstruction:
		//	referencedElement=ModelingUnitInstructionReference "{" contributions+=ModelingUnitInstruction* "}"
		//	lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//referencedElement=ModelingUnitInstructionReference "{" contributions+=ModelingUnitInstruction* "}"
		//lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//referencedElement=ModelingUnitInstructionReference
		public Assignment getReferencedElementAssignment_0() { return cReferencedElementAssignment_0; }

		//ModelingUnitInstructionReference
		public RuleCall getReferencedElementModelingUnitInstructionReferenceParserRuleCall_0_0() { return cReferencedElementModelingUnitInstructionReferenceParserRuleCall_0_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_1() { return cLeftCurlyBracketKeyword_1; }

		//contributions+=ModelingUnitInstruction*
		public Assignment getContributionsAssignment_2() { return cContributionsAssignment_2; }

		//ModelingUnitInstruction
		public RuleCall getContributionsModelingUnitInstructionParserRuleCall_2_0() { return cContributionsModelingUnitInstructionParserRuleCall_2_0; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_3() { return cRightCurlyBracketKeyword_3; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_4() { return cLineBreakAssignment_4; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_4_0() { return cLineBreakLINE_BREAKTerminalRuleCall_4_0; }
	}

	public class TypeReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cTypeReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIntentHrefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIntentHrefStringWithoutQuotesTerminalRuleCall_1_0 = (RuleCall)cIntentHrefAssignment_1.eContents().get(0);
		
		//TypeReference returns modelingUnit::TypeReference:
		//	{modelingUnit::TypeReference} IntentHref=StringWithoutQuotes;
		public ParserRule getRule() { return rule; }

		//{modelingUnit::TypeReference} IntentHref=StringWithoutQuotes
		public Group getGroup() { return cGroup; }

		//{modelingUnit::TypeReference}
		public Action getTypeReferenceAction_0() { return cTypeReferenceAction_0; }

		//IntentHref=StringWithoutQuotes
		public Assignment getIntentHrefAssignment_1() { return cIntentHrefAssignment_1; }

		//StringWithoutQuotes
		public RuleCall getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0() { return cIntentHrefStringWithoutQuotesTerminalRuleCall_1_0; }
	}

	public class InstanciationInstructionReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "InstanciationInstructionReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cInstanciationInstructionReferenceAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cIntentHrefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIntentHrefStringWithoutQuotesTerminalRuleCall_1_0 = (RuleCall)cIntentHrefAssignment_1.eContents().get(0);
		
		//InstanciationInstructionReference returns modelingUnit::InstanciationInstructionReference:
		//	{modelingUnit::InstanciationInstructionReference} IntentHref=StringWithoutQuotes;
		public ParserRule getRule() { return rule; }

		//{modelingUnit::InstanciationInstructionReference} IntentHref=StringWithoutQuotes
		public Group getGroup() { return cGroup; }

		//{modelingUnit::InstanciationInstructionReference}
		public Action getInstanciationInstructionReferenceAction_0() { return cInstanciationInstructionReferenceAction_0; }

		//IntentHref=StringWithoutQuotes
		public Assignment getIntentHrefAssignment_1() { return cIntentHrefAssignment_1; }

		//StringWithoutQuotes
		public RuleCall getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0() { return cIntentHrefStringWithoutQuotesTerminalRuleCall_1_0; }
	}

	public class KeyValForAnnotationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "KeyValForAnnotation");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cKeyValForAnnotationAction_0 = (Action)cGroup.eContents().get(0);
		private final Assignment cKeyAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cKeyStringWithoutQuotesTerminalRuleCall_1_0 = (RuleCall)cKeyAssignment_1.eContents().get(0);
		private final Keyword cEqualsSignKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cValueAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cValueEStringParserRuleCall_3_0 = (RuleCall)cValueAssignment_3.eContents().get(0);
		
		//KeyValForAnnotation returns modelingUnit::KeyValForAnnotation:
		//	{modelingUnit::KeyValForAnnotation} key=StringWithoutQuotes "=" value=EString;
		public ParserRule getRule() { return rule; }

		//{modelingUnit::KeyValForAnnotation} key=StringWithoutQuotes "=" value=EString
		public Group getGroup() { return cGroup; }

		//{modelingUnit::KeyValForAnnotation}
		public Action getKeyValForAnnotationAction_0() { return cKeyValForAnnotationAction_0; }

		//key=StringWithoutQuotes
		public Assignment getKeyAssignment_1() { return cKeyAssignment_1; }

		//StringWithoutQuotes
		public RuleCall getKeyStringWithoutQuotesTerminalRuleCall_1_0() { return cKeyStringWithoutQuotesTerminalRuleCall_1_0; }

		//"="
		public Keyword getEqualsSignKeyword_2() { return cEqualsSignKeyword_2; }

		//value=EString
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//EString
		public RuleCall getValueEStringParserRuleCall_3_0() { return cValueEStringParserRuleCall_3_0; }
	}

	public class ResourceReferenceElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceReference");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Keyword cLeftSquareBracketKeyword_0 = (Keyword)cGroup.eContents().get(0);
		private final Assignment cIntentHrefAssignment_1 = (Assignment)cGroup.eContents().get(1);
		private final RuleCall cIntentHrefEStringParserRuleCall_1_0 = (RuleCall)cIntentHrefAssignment_1.eContents().get(0);
		private final Keyword cRightSquareBracketKeyword_2 = (Keyword)cGroup.eContents().get(2);
		private final Assignment cLineBreakAssignment_3 = (Assignment)cGroup.eContents().get(3);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_3_0 = (RuleCall)cLineBreakAssignment_3.eContents().get(0);
		
		//ResourceReference returns modelingUnit::ResourceReference:
		//	"[" IntentHref=EString "]" lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//"[" IntentHref=EString "]" lineBreak?=LINE_BREAK?
		public Group getGroup() { return cGroup; }

		//"["
		public Keyword getLeftSquareBracketKeyword_0() { return cLeftSquareBracketKeyword_0; }

		//IntentHref=EString
		public Assignment getIntentHrefAssignment_1() { return cIntentHrefAssignment_1; }

		//EString
		public RuleCall getIntentHrefEStringParserRuleCall_1_0() { return cIntentHrefEStringParserRuleCall_1_0; }

		//"]"
		public Keyword getRightSquareBracketKeyword_2() { return cRightSquareBracketKeyword_2; }

		//lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_3() { return cLineBreakAssignment_3; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_3_0() { return cLineBreakLINE_BREAKTerminalRuleCall_3_0; }
	}

	public class ResourceDeclarationElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ResourceDeclaration");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final Action cResourceDeclarationAction_0 = (Action)cGroup.eContents().get(0);
		private final Keyword cResourceKeyword_1 = (Keyword)cGroup.eContents().get(1);
		private final Assignment cNameAssignment_2 = (Assignment)cGroup.eContents().get(2);
		private final RuleCall cNameStringWithoutQuotesTerminalRuleCall_2_0 = (RuleCall)cNameAssignment_2.eContents().get(0);
		private final Keyword cLeftCurlyBracketKeyword_3 = (Keyword)cGroup.eContents().get(3);
		private final RuleCall cLINE_BREAKTerminalRuleCall_4 = (RuleCall)cGroup.eContents().get(4);
		private final Group cGroup_5 = (Group)cGroup.eContents().get(5);
		private final Keyword cURIKeyword_5_0 = (Keyword)cGroup_5.eContents().get(0);
		private final Keyword cEqualsSignKeyword_5_1 = (Keyword)cGroup_5.eContents().get(1);
		private final Assignment cUriAssignment_5_2 = (Assignment)cGroup_5.eContents().get(2);
		private final RuleCall cUriURITerminalRuleCall_5_2_0 = (RuleCall)cUriAssignment_5_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_5_3 = (Keyword)cGroup_5.eContents().get(3);
		private final RuleCall cLINE_BREAKTerminalRuleCall_5_4 = (RuleCall)cGroup_5.eContents().get(4);
		private final Group cGroup_6 = (Group)cGroup.eContents().get(6);
		private final Keyword cContentTypeKeyword_6_0 = (Keyword)cGroup_6.eContents().get(0);
		private final Keyword cEqualsSignKeyword_6_1 = (Keyword)cGroup_6.eContents().get(1);
		private final Assignment cContentTypeAssignment_6_2 = (Assignment)cGroup_6.eContents().get(2);
		private final RuleCall cContentTypeEStringParserRuleCall_6_2_0 = (RuleCall)cContentTypeAssignment_6_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_6_3 = (Keyword)cGroup_6.eContents().get(3);
		private final RuleCall cLINE_BREAKTerminalRuleCall_6_4 = (RuleCall)cGroup_6.eContents().get(4);
		private final Group cGroup_7 = (Group)cGroup.eContents().get(7);
		private final Keyword cContentKeyword_7_0 = (Keyword)cGroup_7.eContents().get(0);
		private final Keyword cPlusSignEqualsSignKeyword_7_1 = (Keyword)cGroup_7.eContents().get(1);
		private final Assignment cContentAssignment_7_2 = (Assignment)cGroup_7.eContents().get(2);
		private final RuleCall cContentModelingUnitInstructionReferenceParserRuleCall_7_2_0 = (RuleCall)cContentAssignment_7_2.eContents().get(0);
		private final Keyword cSemicolonKeyword_7_3 = (Keyword)cGroup_7.eContents().get(3);
		private final RuleCall cLINE_BREAKTerminalRuleCall_7_4 = (RuleCall)cGroup_7.eContents().get(4);
		private final Keyword cRightCurlyBracketKeyword_8 = (Keyword)cGroup.eContents().get(8);
		private final Assignment cLineBreakAssignment_9 = (Assignment)cGroup.eContents().get(9);
		private final RuleCall cLineBreakLINE_BREAKTerminalRuleCall_9_0 = (RuleCall)cLineBreakAssignment_9.eContents().get(0);
		
		/// * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * / ResourceDeclaration returns
		//modelingUnit::ResourceDeclaration:
		//	{modelingUnit::ResourceDeclaration} "Resource" name=StringWithoutQuotes? "{" LINE_BREAK? ("URI" "=" uri=URI ";"
		//	LINE_BREAK?)? ("contentType" "=" contentType=EString ";" LINE_BREAK?)? ("content" "+="
		//	content+=ModelingUnitInstructionReference ";" LINE_BREAK?)* "}" lineBreak?=LINE_BREAK?;
		public ParserRule getRule() { return rule; }

		//{modelingUnit::ResourceDeclaration} "Resource" name=StringWithoutQuotes? "{" LINE_BREAK? ("URI" "=" uri=URI ";"
		//LINE_BREAK?)? ("contentType" "=" contentType=EString ";" LINE_BREAK?)? ("content" "+="
		//content+=ModelingUnitInstructionReference ";" LINE_BREAK?)* "}" lineBreak?=LINE_BREAK?
		/// * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * /
		public Group getGroup() { return cGroup; }

		//{modelingUnit::ResourceDeclaration}
		public Action getResourceDeclarationAction_0() { return cResourceDeclarationAction_0; }

		//"Resource"
		public Keyword getResourceKeyword_1() { return cResourceKeyword_1; }

		//name=StringWithoutQuotes?
		public Assignment getNameAssignment_2() { return cNameAssignment_2; }

		//StringWithoutQuotes
		public RuleCall getNameStringWithoutQuotesTerminalRuleCall_2_0() { return cNameStringWithoutQuotesTerminalRuleCall_2_0; }

		//"{"
		public Keyword getLeftCurlyBracketKeyword_3() { return cLeftCurlyBracketKeyword_3; }

		//LINE_BREAK?
		public RuleCall getLINE_BREAKTerminalRuleCall_4() { return cLINE_BREAKTerminalRuleCall_4; }

		//("URI" "=" uri=URI ";" LINE_BREAK?)?
		public Group getGroup_5() { return cGroup_5; }

		//"URI"
		public Keyword getURIKeyword_5_0() { return cURIKeyword_5_0; }

		//"="
		public Keyword getEqualsSignKeyword_5_1() { return cEqualsSignKeyword_5_1; }

		//uri=URI
		public Assignment getUriAssignment_5_2() { return cUriAssignment_5_2; }

		//URI
		public RuleCall getUriURITerminalRuleCall_5_2_0() { return cUriURITerminalRuleCall_5_2_0; }

		//";"
		public Keyword getSemicolonKeyword_5_3() { return cSemicolonKeyword_5_3; }

		//LINE_BREAK?
		public RuleCall getLINE_BREAKTerminalRuleCall_5_4() { return cLINE_BREAKTerminalRuleCall_5_4; }

		//("contentType" "=" contentType=EString ";" LINE_BREAK?)?
		public Group getGroup_6() { return cGroup_6; }

		//"contentType"
		public Keyword getContentTypeKeyword_6_0() { return cContentTypeKeyword_6_0; }

		//"="
		public Keyword getEqualsSignKeyword_6_1() { return cEqualsSignKeyword_6_1; }

		//contentType=EString
		public Assignment getContentTypeAssignment_6_2() { return cContentTypeAssignment_6_2; }

		//EString
		public RuleCall getContentTypeEStringParserRuleCall_6_2_0() { return cContentTypeEStringParserRuleCall_6_2_0; }

		//";"
		public Keyword getSemicolonKeyword_6_3() { return cSemicolonKeyword_6_3; }

		//LINE_BREAK?
		public RuleCall getLINE_BREAKTerminalRuleCall_6_4() { return cLINE_BREAKTerminalRuleCall_6_4; }

		//("content" "+=" content+=ModelingUnitInstructionReference ";" LINE_BREAK?)*
		public Group getGroup_7() { return cGroup_7; }

		//"content"
		public Keyword getContentKeyword_7_0() { return cContentKeyword_7_0; }

		//"+="
		public Keyword getPlusSignEqualsSignKeyword_7_1() { return cPlusSignEqualsSignKeyword_7_1; }

		//content+=ModelingUnitInstructionReference
		public Assignment getContentAssignment_7_2() { return cContentAssignment_7_2; }

		//ModelingUnitInstructionReference
		public RuleCall getContentModelingUnitInstructionReferenceParserRuleCall_7_2_0() { return cContentModelingUnitInstructionReferenceParserRuleCall_7_2_0; }

		//";"
		public Keyword getSemicolonKeyword_7_3() { return cSemicolonKeyword_7_3; }

		//LINE_BREAK?
		public RuleCall getLINE_BREAKTerminalRuleCall_7_4() { return cLINE_BREAKTerminalRuleCall_7_4; }

		//"}"
		public Keyword getRightCurlyBracketKeyword_8() { return cRightCurlyBracketKeyword_8; }

		/// * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * / lineBreak?=LINE_BREAK?
		public Assignment getLineBreakAssignment_9() { return cLineBreakAssignment_9; }

		//LINE_BREAK
		public RuleCall getLineBreakLINE_BREAKTerminalRuleCall_9_0() { return cLineBreakLINE_BREAKTerminalRuleCall_9_0; }
	}
	
	
	public class TypeLabelElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "TypeLabel");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cLAZYEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cLAZYLazylabelKeyword_0_0 = (Keyword)cLAZYEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cEXPLICITEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cEXPLICITLabelKeyword_1_0 = (Keyword)cEXPLICITEnumLiteralDeclaration_1.eContents().get(0);
		
		/// * ------------ END TOKENS ------------ * / / * ------------ ENUM AND DATATYPES ------------ * / enum TypeLabel returns
		//genericUnit::TypeLabel:
		//	LAZY="@lazylabel" | EXPLICIT="@label";
		public EnumRule getRule() { return rule; }

		//LAZY="@lazylabel" | EXPLICIT="@label"
		public Alternatives getAlternatives() { return cAlternatives; }

		//LAZY="@lazylabel"
		public EnumLiteralDeclaration getLAZYEnumLiteralDeclaration_0() { return cLAZYEnumLiteralDeclaration_0; }

		//"@lazylabel"
		public Keyword getLAZYLazylabelKeyword_0_0() { return cLAZYLazylabelKeyword_0_0; }

		//EXPLICIT="@label"
		public EnumLiteralDeclaration getEXPLICITEnumLiteralDeclaration_1() { return cEXPLICITEnumLiteralDeclaration_1; }

		//"@label"
		public Keyword getEXPLICITLabelKeyword_1_0() { return cEXPLICITLabelKeyword_1_0; }
	}

	public class AffectationOperatorElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "AffectationOperator");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cMULTI_VALUED_AFFECTATIONEnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cMULTI_VALUED_AFFECTATIONPlusSignEqualsSignKeyword_0_0 = (Keyword)cMULTI_VALUED_AFFECTATIONEnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cSINGLE_VALUED_AFFECTATIONEnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cSINGLE_VALUED_AFFECTATIONEqualsSignKeyword_1_0 = (Keyword)cSINGLE_VALUED_AFFECTATIONEnumLiteralDeclaration_1.eContents().get(0);
		
		//enum AffectationOperator returns modelingUnit::AffectationOperator:
		//	MULTI_VALUED_AFFECTATION="+=" | SINGLE_VALUED_AFFECTATION="=";
		public EnumRule getRule() { return rule; }

		//MULTI_VALUED_AFFECTATION="+=" | SINGLE_VALUED_AFFECTATION="="
		public Alternatives getAlternatives() { return cAlternatives; }

		//MULTI_VALUED_AFFECTATION="+="
		public EnumLiteralDeclaration getMULTI_VALUED_AFFECTATIONEnumLiteralDeclaration_0() { return cMULTI_VALUED_AFFECTATIONEnumLiteralDeclaration_0; }

		//"+="
		public Keyword getMULTI_VALUED_AFFECTATIONPlusSignEqualsSignKeyword_0_0() { return cMULTI_VALUED_AFFECTATIONPlusSignEqualsSignKeyword_0_0; }

		//SINGLE_VALUED_AFFECTATION="="
		public EnumLiteralDeclaration getSINGLE_VALUED_AFFECTATIONEnumLiteralDeclaration_1() { return cSINGLE_VALUED_AFFECTATIONEnumLiteralDeclaration_1; }

		//"="
		public Keyword getSINGLE_VALUED_AFFECTATIONEqualsSignKeyword_1_0() { return cSINGLE_VALUED_AFFECTATIONEqualsSignKeyword_1_0; }
	}
	
	private ModelingUnitElements pModelingUnit;
	private EBooleanElements pEBoolean;
	private TerminalRule tEInt;
	private EStringElements pEString;
	private TerminalRule tStringWithoutQuotes;
	private StringWithQuotesElements pStringWithQuotes;
	private TerminalRule tURI;
	private TerminalRule tLINE_BREAK;
	private TypeLabelElements unknownRuleTypeLabel;
	private AffectationOperatorElements unknownRuleAffectationOperator;
	private UnitInstructionElements pUnitInstruction;
	private LabelReferenceInstructionElements pLabelReferenceInstruction;
	private SectionReferenceInstructionElements pSectionReferenceInstruction;
	private AdressedAnnotationElements pAdressedAnnotation;
	private SectionOrParagraphReferenceElements pSectionOrParagraphReference;
	private UnitInstructionReferenceElements pUnitInstructionReference;
	private LabelDeclarationReferenceElements pLabelDeclarationReference;
	private ModelingUnitInstructionReferenceElements pModelingUnitInstructionReference;
	private ModelingUnitInstructionElements pModelingUnitInstruction;
	private InstanceLevelInstructionElements pInstanceLevelInstruction;
	private ValueForStructuralFeatureElements pValueForStructuralFeature;
	private ModelingUnitInstructionReference_ImplElements pModelingUnitInstructionReference_Impl;
	private SectionReferenceinModelingUnitElements pSectionReferenceinModelingUnit;
	private LabelinModelingUnitElements pLabelinModelingUnit;
	private AnnotationDeclarationElements pAnnotationDeclaration;
	private InstanciationInstructionElements pInstanciationInstruction;
	private StructuralFeatureAffectationElements pStructuralFeatureAffectation;
	private NativeValueForStructuralFeatureElements pNativeValueForStructuralFeature;
	private NewObjectValueForStructuralFeatureElements pNewObjectValueForStructuralFeature;
	private ReferenceValueForStructuralFeatureElements pReferenceValueForStructuralFeature;
	private ContributionInstructionElements pContributionInstruction;
	private TypeReferenceElements pTypeReference;
	private InstanciationInstructionReferenceElements pInstanciationInstructionReference;
	private KeyValForAnnotationElements pKeyValForAnnotation;
	private ResourceReferenceElements pResourceReference;
	private ResourceDeclarationElements pResourceDeclaration;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public ModelingUnitXTextGrammarGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	//// Entry rule : Beginning of a Modeling Unit.
	//ModelingUnit returns modelingUnit::ModelingUnit:
	//	{modelingUnit::ModelingUnit} // A Modeling Unit may have a name
	//	unitName=StringWithoutQuotes? LINE_BREAK? // A Modeling may be attache to a resource
	//	resource=ResourceReference? // A Modeling Unit is composed of ModelingUnitInstruction or some insctructions avalaible in a Generic Unit.
	//	instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*;
	public ModelingUnitElements getModelingUnitAccess() {
		return (pModelingUnit != null) ? pModelingUnit : (pModelingUnit = new ModelingUnitElements());
	}
	
	public ParserRule getModelingUnitRule() {
		return getModelingUnitAccess().getRule();
	}

	/// * ------------ TOKENS ------------ * / EBoolean returns ecore::EBoolean:
	//	"true" | "false";
	public EBooleanElements getEBooleanAccess() {
		return (pEBoolean != null) ? pEBoolean : (pEBoolean = new EBooleanElements());
	}
	
	public ParserRule getEBooleanRule() {
		return getEBooleanAccess().getRule();
	}

	//terminal EInt returns ecore::EInt:
	//	INT;
	public TerminalRule getEIntRule() {
		return (tEInt != null) ? tEInt : (tEInt = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "EInt"));
	} 

	//EString returns ecore::EString:
	//	StringWithQuotes | StringWithoutQuotes;
	public EStringElements getEStringAccess() {
		return (pEString != null) ? pEString : (pEString = new EStringElements());
	}
	
	public ParserRule getEStringRule() {
		return getEStringAccess().getRule();
	}

	//// Represents a String without any quotes around.
	//terminal StringWithoutQuotes:
	//	("a".."z" | "A".."Z" | "0".."9" | "." | ":" | "_" | "-")+;
	public TerminalRule getStringWithoutQuotesRule() {
		return (tStringWithoutQuotes != null) ? tStringWithoutQuotes : (tStringWithoutQuotes = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "StringWithoutQuotes"));
	} 

	//// Represents a String with quotes around.
	//StringWithQuotes returns ecore::EString:
	//	STRING;
	public StringWithQuotesElements getStringWithQuotesAccess() {
		return (pStringWithQuotes != null) ? pStringWithQuotes : (pStringWithQuotes = new StringWithQuotesElements());
	}
	
	public ParserRule getStringWithQuotesRule() {
		return getStringWithQuotesAccess().getRule();
	}

	//// Represents a standard URI.
	//terminal URI returns document::URI: / * TODO: implement this rule and an appropriate IValueConverter * / "\"" ("file:/" |
	//	"platform:/" | "cdo:/") ("a".."z" | "A".."Z" | "0".."9" | "." | "/" | ":" | "_" | "-")+ "\"";
	public TerminalRule getURIRule() {
		return (tURI != null) ? tURI : (tURI = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "URI"));
	} 

	//// Represents a user's line jump	
	//terminal LINE_BREAK:
	//	"\n";
	public TerminalRule getLINE_BREAKRule() {
		return (tLINE_BREAK != null) ? tLINE_BREAK : (tLINE_BREAK = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "LINE_BREAK"));
	} 

	/// * ------------ END TOKENS ------------ * / / * ------------ ENUM AND DATATYPES ------------ * / enum TypeLabel returns
	//genericUnit::TypeLabel:
	//	LAZY="@lazylabel" | EXPLICIT="@label";
	public TypeLabelElements getTypeLabelAccess() {
		return (unknownRuleTypeLabel != null) ? unknownRuleTypeLabel : (unknownRuleTypeLabel = new TypeLabelElements());
	}
	
	public EnumRule getTypeLabelRule() {
		return getTypeLabelAccess().getRule();
	}

	//enum AffectationOperator returns modelingUnit::AffectationOperator:
	//	MULTI_VALUED_AFFECTATION="+=" | SINGLE_VALUED_AFFECTATION="=";
	public AffectationOperatorElements getAffectationOperatorAccess() {
		return (unknownRuleAffectationOperator != null) ? unknownRuleAffectationOperator : (unknownRuleAffectationOperator = new AffectationOperatorElements());
	}
	
	public EnumRule getAffectationOperatorRule() {
		return getAffectationOperatorAccess().getRule();
	}

	/// * ------------ END ENUM AND DATATYPES ------------ * /
	/// * ------------ GENERIC INSTRUCTIONS FROM GENERIC UNIT ------------ * / UnitInstruction returns
	//genericUnit::UnitInstruction:
	//	SectionReferenceInstruction | LabelReferenceInstruction | AdressedAnnotation;
	public UnitInstructionElements getUnitInstructionAccess() {
		return (pUnitInstruction != null) ? pUnitInstruction : (pUnitInstruction = new UnitInstructionElements());
	}
	
	public ParserRule getUnitInstructionRule() {
		return getUnitInstructionAccess().getRule();
	}

	//LabelReferenceInstruction returns genericUnit::LabelReferenceInstruction:
	//	"@see" //COMMENT RENSEIGNER CE TYPE ? 
	//	type=TypeLabel referencedLabel=LabelDeclarationReference lineBreak?=LINE_BREAK?;
	public LabelReferenceInstructionElements getLabelReferenceInstructionAccess() {
		return (pLabelReferenceInstruction != null) ? pLabelReferenceInstruction : (pLabelReferenceInstruction = new LabelReferenceInstructionElements());
	}
	
	public ParserRule getLabelReferenceInstructionRule() {
		return getLabelReferenceInstructionAccess().getRule();
	}

	//SectionReferenceInstruction returns genericUnit::IntentSectionReferenceInstruction:
	//	"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?;
	public SectionReferenceInstructionElements getSectionReferenceInstructionAccess() {
		return (pSectionReferenceInstruction != null) ? pSectionReferenceInstruction : (pSectionReferenceInstruction = new SectionReferenceInstructionElements());
	}
	
	public ParserRule getSectionReferenceInstructionRule() {
		return getSectionReferenceInstructionAccess().getRule();
	}

	//AdressedAnnotation returns genericUnit::AdressedAnnotation:
	//	lineBreak?="lineBreak"? "AdressedAnnotation" "{" "receiver" "{" receiver+=EString ("," receiver+=EString)* "}"
	//	"source" source=EString "message" message=EString "type" type=EString "}";
	public AdressedAnnotationElements getAdressedAnnotationAccess() {
		return (pAdressedAnnotation != null) ? pAdressedAnnotation : (pAdressedAnnotation = new AdressedAnnotationElements());
	}
	
	public ParserRule getAdressedAnnotationRule() {
		return getAdressedAnnotationAccess().getRule();
	}

	/// *	('referencedObject' referencedObject=[markup::StructureElement|EString])?
	//    '}'* /SectionOrParagraphReference returns document::IntentSectionOrParagraphReference:
	//	IntentHref=StringWithQuotes;
	public SectionOrParagraphReferenceElements getSectionOrParagraphReferenceAccess() {
		return (pSectionOrParagraphReference != null) ? pSectionOrParagraphReference : (pSectionOrParagraphReference = new SectionOrParagraphReferenceElements());
	}
	
	public ParserRule getSectionOrParagraphReferenceRule() {
		return getSectionOrParagraphReferenceAccess().getRule();
	}

	//UnitInstructionReference returns genericUnit::UnitInstructionReference:
	//	"href" IntentHref=EString;
	public UnitInstructionReferenceElements getUnitInstructionReferenceAccess() {
		return (pUnitInstructionReference != null) ? pUnitInstructionReference : (pUnitInstructionReference = new UnitInstructionReferenceElements());
	}
	
	public ParserRule getUnitInstructionReferenceRule() {
		return getUnitInstructionReferenceAccess().getRule();
	}

	//LabelDeclarationReference returns genericUnit::LabelDeclarationReference:
	//	"href" IntentHref=EString ("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?;
	public LabelDeclarationReferenceElements getLabelDeclarationReferenceAccess() {
		return (pLabelDeclarationReference != null) ? pLabelDeclarationReference : (pLabelDeclarationReference = new LabelDeclarationReferenceElements());
	}
	
	public ParserRule getLabelDeclarationReferenceRule() {
		return getLabelDeclarationReferenceAccess().getRule();
	}

	/// * ------------ END GENERIC INSTRUCTIONS FROM GENERIC UNIT ------------ * /
	/// * ------------ INSTRUCTIONS FROM MODELING UNIT ------------ * / ModelingUnitInstructionReference returns
	//modelingUnit::ModelingUnitInstructionReference:
	//	ModelingUnitInstructionReference_Impl;
	public ModelingUnitInstructionReferenceElements getModelingUnitInstructionReferenceAccess() {
		return (pModelingUnitInstructionReference != null) ? pModelingUnitInstructionReference : (pModelingUnitInstructionReference = new ModelingUnitInstructionReferenceElements());
	}
	
	public ParserRule getModelingUnitInstructionReferenceRule() {
		return getModelingUnitInstructionReferenceAccess().getRule();
	}

	//ModelingUnitInstruction returns modelingUnit::ModelingUnitInstruction:
	//	InstanceLevelInstruction | ResourceDeclaration | ContributionInstruction | AnnotationDeclaration |
	//	SectionReferenceinModelingUnit | LabelinModelingUnit;
	public ModelingUnitInstructionElements getModelingUnitInstructionAccess() {
		return (pModelingUnitInstruction != null) ? pModelingUnitInstruction : (pModelingUnitInstruction = new ModelingUnitInstructionElements());
	}
	
	public ParserRule getModelingUnitInstructionRule() {
		return getModelingUnitInstructionAccess().getRule();
	}

	//InstanceLevelInstruction returns modelingUnit::InstanceLevelInstruction:
	//	InstanciationInstruction | StructuralFeatureAffectation;
	public InstanceLevelInstructionElements getInstanceLevelInstructionAccess() {
		return (pInstanceLevelInstruction != null) ? pInstanceLevelInstruction : (pInstanceLevelInstruction = new InstanceLevelInstructionElements());
	}
	
	public ParserRule getInstanceLevelInstructionRule() {
		return getInstanceLevelInstructionAccess().getRule();
	}

	//ValueForStructuralFeature returns modelingUnit::ValueForStructuralFeature:
	//	NativeValueForStructuralFeature | ReferenceValueForStructuralFeature | NewObjectValueForStructuralFeature;
	public ValueForStructuralFeatureElements getValueForStructuralFeatureAccess() {
		return (pValueForStructuralFeature != null) ? pValueForStructuralFeature : (pValueForStructuralFeature = new ValueForStructuralFeatureElements());
	}
	
	public ParserRule getValueForStructuralFeatureRule() {
		return getValueForStructuralFeatureAccess().getRule();
	}

	//ModelingUnitInstructionReference_Impl returns modelingUnit::ModelingUnitInstructionReference:
	//	IntentHref=StringWithoutQuotes;
	public ModelingUnitInstructionReference_ImplElements getModelingUnitInstructionReference_ImplAccess() {
		return (pModelingUnitInstructionReference_Impl != null) ? pModelingUnitInstructionReference_Impl : (pModelingUnitInstructionReference_Impl = new ModelingUnitInstructionReference_ImplElements());
	}
	
	public ParserRule getModelingUnitInstructionReference_ImplRule() {
		return getModelingUnitInstructionReference_ImplAccess().getRule();
	}

	//SectionReferenceinModelingUnit returns modelingUnit::IntentSectionReferenceinModelingUnit:
	//	"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?;
	public SectionReferenceinModelingUnitElements getSectionReferenceinModelingUnitAccess() {
		return (pSectionReferenceinModelingUnit != null) ? pSectionReferenceinModelingUnit : (pSectionReferenceinModelingUnit = new SectionReferenceinModelingUnitElements());
	}
	
	public ParserRule getSectionReferenceinModelingUnitRule() {
		return getSectionReferenceinModelingUnitAccess().getRule();
	}

	//LabelinModelingUnit returns modelingUnit::LabelinModelingUnit:
	//	type=TypeLabel labelValue=EString textToPrint=EString? lineBreak?=LINE_BREAK?;
	public LabelinModelingUnitElements getLabelinModelingUnitAccess() {
		return (pLabelinModelingUnit != null) ? pLabelinModelingUnit : (pLabelinModelingUnit = new LabelinModelingUnitElements());
	}
	
	public ParserRule getLabelinModelingUnitRule() {
		return getLabelinModelingUnitAccess().getRule();
	}

	//AnnotationDeclaration returns modelingUnit::AnnotationDeclaration:
	//	"@Annotation" annotationID=StringWithoutQuotes map+=KeyValForAnnotation ("," map+=KeyValForAnnotation)*
	//	lineBreak?=LINE_BREAK?;
	public AnnotationDeclarationElements getAnnotationDeclarationAccess() {
		return (pAnnotationDeclaration != null) ? pAnnotationDeclaration : (pAnnotationDeclaration = new AnnotationDeclarationElements());
	}
	
	public ParserRule getAnnotationDeclarationRule() {
		return getAnnotationDeclarationAccess().getRule();
	}

	//InstanciationInstruction returns modelingUnit::InstanciationInstruction:
	//	"new" metaType=TypeReference name=StringWithoutQuotes? "{" structuralFeatures+=StructuralFeatureAffectation* "}"
	//	lineBreak?=LINE_BREAK?;
	public InstanciationInstructionElements getInstanciationInstructionAccess() {
		return (pInstanciationInstruction != null) ? pInstanciationInstruction : (pInstanciationInstruction = new InstanciationInstructionElements());
	}
	
	public ParserRule getInstanciationInstructionRule() {
		return getInstanciationInstructionAccess().getRule();
	}

	//StructuralFeatureAffectation returns modelingUnit::StructuralFeatureAffectation: //metaType=TypeReference
	//	name=StringWithoutQuotes (usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "["
	//	values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]")) ";" lineBreak?=LINE_BREAK?;
	public StructuralFeatureAffectationElements getStructuralFeatureAffectationAccess() {
		return (pStructuralFeatureAffectation != null) ? pStructuralFeatureAffectation : (pStructuralFeatureAffectation = new StructuralFeatureAffectationElements());
	}
	
	public ParserRule getStructuralFeatureAffectationRule() {
		return getStructuralFeatureAffectationAccess().getRule();
	}

	//NativeValueForStructuralFeature returns modelingUnit::NativeValueForStructuralFeature:
	//	value=StringWithQuotes lineBreak?=LINE_BREAK?;
	public NativeValueForStructuralFeatureElements getNativeValueForStructuralFeatureAccess() {
		return (pNativeValueForStructuralFeature != null) ? pNativeValueForStructuralFeature : (pNativeValueForStructuralFeature = new NativeValueForStructuralFeatureElements());
	}
	
	public ParserRule getNativeValueForStructuralFeatureRule() {
		return getNativeValueForStructuralFeatureAccess().getRule();
	}

	//NewObjectValueForStructuralFeature returns modelingUnit::NewObjectValueForStructuralFeature:
	//	value=InstanciationInstruction;
	public NewObjectValueForStructuralFeatureElements getNewObjectValueForStructuralFeatureAccess() {
		return (pNewObjectValueForStructuralFeature != null) ? pNewObjectValueForStructuralFeature : (pNewObjectValueForStructuralFeature = new NewObjectValueForStructuralFeatureElements());
	}
	
	public ParserRule getNewObjectValueForStructuralFeatureRule() {
		return getNewObjectValueForStructuralFeatureAccess().getRule();
	}

	//ReferenceValueForStructuralFeature returns modelingUnit::ReferenceValueForStructuralFeature:
	//	referencedElement=InstanciationInstructionReference;
	public ReferenceValueForStructuralFeatureElements getReferenceValueForStructuralFeatureAccess() {
		return (pReferenceValueForStructuralFeature != null) ? pReferenceValueForStructuralFeature : (pReferenceValueForStructuralFeature = new ReferenceValueForStructuralFeatureElements());
	}
	
	public ParserRule getReferenceValueForStructuralFeatureRule() {
		return getReferenceValueForStructuralFeatureAccess().getRule();
	}

	//ContributionInstruction returns modelingUnit::ContributionInstruction:
	//	referencedElement=ModelingUnitInstructionReference "{" contributions+=ModelingUnitInstruction* "}"
	//	lineBreak?=LINE_BREAK?;
	public ContributionInstructionElements getContributionInstructionAccess() {
		return (pContributionInstruction != null) ? pContributionInstruction : (pContributionInstruction = new ContributionInstructionElements());
	}
	
	public ParserRule getContributionInstructionRule() {
		return getContributionInstructionAccess().getRule();
	}

	//TypeReference returns modelingUnit::TypeReference:
	//	{modelingUnit::TypeReference} IntentHref=StringWithoutQuotes;
	public TypeReferenceElements getTypeReferenceAccess() {
		return (pTypeReference != null) ? pTypeReference : (pTypeReference = new TypeReferenceElements());
	}
	
	public ParserRule getTypeReferenceRule() {
		return getTypeReferenceAccess().getRule();
	}

	//InstanciationInstructionReference returns modelingUnit::InstanciationInstructionReference:
	//	{modelingUnit::InstanciationInstructionReference} IntentHref=StringWithoutQuotes;
	public InstanciationInstructionReferenceElements getInstanciationInstructionReferenceAccess() {
		return (pInstanciationInstructionReference != null) ? pInstanciationInstructionReference : (pInstanciationInstructionReference = new InstanciationInstructionReferenceElements());
	}
	
	public ParserRule getInstanciationInstructionReferenceRule() {
		return getInstanciationInstructionReferenceAccess().getRule();
	}

	//KeyValForAnnotation returns modelingUnit::KeyValForAnnotation:
	//	{modelingUnit::KeyValForAnnotation} key=StringWithoutQuotes "=" value=EString;
	public KeyValForAnnotationElements getKeyValForAnnotationAccess() {
		return (pKeyValForAnnotation != null) ? pKeyValForAnnotation : (pKeyValForAnnotation = new KeyValForAnnotationElements());
	}
	
	public ParserRule getKeyValForAnnotationRule() {
		return getKeyValForAnnotationAccess().getRule();
	}

	//ResourceReference returns modelingUnit::ResourceReference:
	//	"[" IntentHref=EString "]" lineBreak?=LINE_BREAK?;
	public ResourceReferenceElements getResourceReferenceAccess() {
		return (pResourceReference != null) ? pResourceReference : (pResourceReference = new ResourceReferenceElements());
	}
	
	public ParserRule getResourceReferenceRule() {
		return getResourceReferenceAccess().getRule();
	}

	/// * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * / ResourceDeclaration returns
	//modelingUnit::ResourceDeclaration:
	//	{modelingUnit::ResourceDeclaration} "Resource" name=StringWithoutQuotes? "{" LINE_BREAK? ("URI" "=" uri=URI ";"
	//	LINE_BREAK?)? ("contentType" "=" contentType=EString ";" LINE_BREAK?)? ("content" "+="
	//	content+=ModelingUnitInstructionReference ";" LINE_BREAK?)* "}" lineBreak?=LINE_BREAK?;
	public ResourceDeclarationElements getResourceDeclarationAccess() {
		return (pResourceDeclaration != null) ? pResourceDeclaration : (pResourceDeclaration = new ResourceDeclarationElements());
	}
	
	public ParserRule getResourceDeclarationRule() {
		return getResourceDeclarationAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" | "n" |
	//	"f" | "r" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
