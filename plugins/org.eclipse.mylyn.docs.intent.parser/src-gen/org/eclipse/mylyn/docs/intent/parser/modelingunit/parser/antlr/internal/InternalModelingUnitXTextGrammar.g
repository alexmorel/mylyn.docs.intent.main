/*
* generated by Xtext
*/
grammar InternalModelingUnitXTextGrammar;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipse.mylyn.docs.intent.parser.modelingunit.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipse.mylyn.docs.intent.parser.modelingunit.parser.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipse.xtext.conversion.ValueConverterException;
import org.eclipse.mylyn.docs.intent.parser.modelingunit.services.ModelingUnitXTextGrammarGrammarAccess;

}

@parser::members {

 	private ModelingUnitXTextGrammarGrammarAccess grammarAccess;
 	
    public InternalModelingUnitXTextGrammarParser(TokenStream input, IAstFactory factory, ModelingUnitXTextGrammarGrammarAccess grammarAccess) {
        this(input);
        this.factory = factory;
        registerRules(grammarAccess.getGrammar());
        this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected InputStream getTokenFile() {
    	ClassLoader classLoader = getClass().getClassLoader();
    	return classLoader.getResourceAsStream("org/eclipse/mylyn/docs/intent/parser/modelingunit/parser/antlr/internal/InternalModelingUnitXTextGrammar.tokens");
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "ModelingUnit";	
   	}
   	
   	@Override
   	protected ModelingUnitXTextGrammarGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleModelingUnit
entryRuleModelingUnit returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelingUnitRule(), currentNode); }
	 iv_ruleModelingUnit=ruleModelingUnit 
	 { $current=$iv_ruleModelingUnit.current; } 
	 EOF 
;

// Rule ModelingUnit
ruleModelingUnit returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getModelingUnitAccess().getModelingUnitAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getModelingUnitAccess().getModelingUnitAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_unitName_1_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getModelingUnitAccess().getUnitNameStringWithoutQuotesTerminalRuleCall_1_0(), "unitName"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"unitName",
	        		lv_unitName_1_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?(RULE_LINE_BREAK
    { 
    createLeafNode(grammarAccess.getModelingUnitAccess().getLINE_BREAKTerminalRuleCall_2(), null); 
    }
)?(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelingUnitAccess().getResourceResourceReferenceParserRuleCall_3_0(), currentNode); 
	    }
		lv_resource_3_0=ruleResourceReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"resource",
	        		lv_resource_3_0, 
	        		"ResourceReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelingUnitAccess().getInstructionsModelingUnitInstructionParserRuleCall_4_0_0(), currentNode); 
	    }
		lv_instructions_4_1=ruleModelingUnitInstruction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"instructions",
	        		lv_instructions_4_1, 
	        		"ModelingUnitInstruction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelingUnitAccess().getInstructionsLabelReferenceInstructionParserRuleCall_4_0_1(), currentNode); 
	    }
		lv_instructions_4_2=ruleLabelReferenceInstruction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"instructions",
	        		lv_instructions_4_2, 
	        		"LabelReferenceInstruction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

    |		{ 
	        currentNode=createCompositeNode(grammarAccess.getModelingUnitAccess().getInstructionsAdressedAnnotationParserRuleCall_4_0_2(), currentNode); 
	    }
		lv_instructions_4_3=ruleAdressedAnnotation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"instructions",
	        		lv_instructions_4_3, 
	        		"AdressedAnnotation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)

)
)*)
;







// Entry rule entryRuleEString
entryRuleEString returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getEStringRule(), currentNode); } 
	 iv_ruleEString=ruleEString 
	 { $current=$iv_ruleEString.current.getText(); }  
	 EOF 
;

// Rule EString
ruleEString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getEStringAccess().getStringWithQuotesParserRuleCall_0(), currentNode); 
    }
    this_StringWithQuotes_0=ruleStringWithQuotes    {
		$current.merge(this_StringWithQuotes_0);
    }

    { 
        currentNode = currentNode.getParent();
    }

    |    this_StringWithoutQuotes_1=RULE_STRINGWITHOUTQUOTES    {
		$current.merge(this_StringWithoutQuotes_1);
    }

    { 
    createLeafNode(grammarAccess.getEStringAccess().getStringWithoutQuotesTerminalRuleCall_1(), null); 
    }
)
    ;





// Entry rule entryRuleStringWithQuotes
entryRuleStringWithQuotes returns [String current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStringWithQuotesRule(), currentNode); } 
	 iv_ruleStringWithQuotes=ruleStringWithQuotes 
	 { $current=$iv_ruleStringWithQuotes.current.getText(); }  
	 EOF 
;

// Rule StringWithQuotes
ruleStringWithQuotes returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
	    lastConsumedNode = currentNode;
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    createLeafNode(grammarAccess.getStringWithQuotesAccess().getSTRINGTerminalRuleCall(), null); 
    }

    ;







// Entry rule entryRuleLabelReferenceInstruction
entryRuleLabelReferenceInstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLabelReferenceInstructionRule(), currentNode); }
	 iv_ruleLabelReferenceInstruction=ruleLabelReferenceInstruction 
	 { $current=$iv_ruleLabelReferenceInstruction.current; } 
	 EOF 
;

// Rule LabelReferenceInstruction
ruleLabelReferenceInstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@see' 
    {
        createLeafNode(grammarAccess.getLabelReferenceInstructionAccess().getSeeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelReferenceInstructionAccess().getTypeTypeLabelEnumRuleCall_1_0(), currentNode); 
	    }
		lv_type_1_0=ruleTypeLabel		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_1_0, 
	        		"TypeLabel", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelReferenceInstructionAccess().getReferencedLabelLabelDeclarationReferenceParserRuleCall_2_0(), currentNode); 
	    }
		lv_referencedLabel_2_0=ruleLabelDeclarationReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencedLabel",
	        		lv_referencedLabel_2_0, 
	        		"LabelDeclarationReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_lineBreak_3_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getLabelReferenceInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleSectionReferenceInstruction
entryRuleSectionReferenceInstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionReferenceInstructionRule(), currentNode); }
	 iv_ruleSectionReferenceInstruction=ruleSectionReferenceInstruction 
	 { $current=$iv_ruleSectionReferenceInstruction.current; } 
	 EOF 
;

// Rule SectionReferenceInstruction
ruleSectionReferenceInstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@see' 
    {
        createLeafNode(grammarAccess.getSectionReferenceInstructionAccess().getSeeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionReferenceInstructionAccess().getReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0(), currentNode); 
	    }
		lv_referencedObject_1_0=ruleSectionOrParagraphReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionReferenceInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencedObject",
	        		lv_referencedObject_1_0, 
	        		"SectionOrParagraphReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionReferenceInstructionAccess().getTextToPrintEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_textToPrint_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionReferenceInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"textToPrint",
	        		lv_textToPrint_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_lineBreak_3_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getSectionReferenceInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionReferenceInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleAdressedAnnotation
entryRuleAdressedAnnotation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAdressedAnnotationRule(), currentNode); }
	 iv_ruleAdressedAnnotation=ruleAdressedAnnotation 
	 { $current=$iv_ruleAdressedAnnotation.current; } 
	 EOF 
;

// Rule AdressedAnnotation
ruleAdressedAnnotation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_lineBreak_0_0=	'lineBreak' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getLineBreakLineBreakKeyword_0_0(), "lineBreak"); 
    }
 
	    {
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdressedAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        
	        try {
	       		set($current, "lineBreak", true, "lineBreak", lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'AdressedAnnotation' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getAdressedAnnotationKeyword_1(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getLeftCurlyBracketKeyword_2(), null); 
    }
	'receiver' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getReceiverKeyword_3(), null); 
    }
	'{' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getLeftCurlyBracketKeyword_4(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdressedAnnotationAccess().getReceiverEStringParserRuleCall_5_0(), currentNode); 
	    }
		lv_receiver_5_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdressedAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"receiver",
	        		lv_receiver_5_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getCommaKeyword_6_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdressedAnnotationAccess().getReceiverEStringParserRuleCall_6_1_0(), currentNode); 
	    }
		lv_receiver_7_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdressedAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"receiver",
	        		lv_receiver_7_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	'}' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getRightCurlyBracketKeyword_7(), null); 
    }
	'source' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getSourceKeyword_8(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdressedAnnotationAccess().getSourceEStringParserRuleCall_9_0(), currentNode); 
	    }
		lv_source_10_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdressedAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"source",
	        		lv_source_10_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'message' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getMessageKeyword_10(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdressedAnnotationAccess().getMessageEStringParserRuleCall_11_0(), currentNode); 
	    }
		lv_message_12_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdressedAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"message",
	        		lv_message_12_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'type' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getTypeKeyword_12(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAdressedAnnotationAccess().getTypeEStringParserRuleCall_13_0(), currentNode); 
	    }
		lv_type_14_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAdressedAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_14_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'}' 
    {
        createLeafNode(grammarAccess.getAdressedAnnotationAccess().getRightCurlyBracketKeyword_14(), null); 
    }
)
;





// Entry rule entryRuleSectionOrParagraphReference
entryRuleSectionOrParagraphReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionOrParagraphReferenceRule(), currentNode); }
	 iv_ruleSectionOrParagraphReference=ruleSectionOrParagraphReference 
	 { $current=$iv_ruleSectionOrParagraphReference.current; } 
	 EOF 
;

// Rule SectionOrParagraphReference
ruleSectionOrParagraphReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionOrParagraphReferenceAccess().getIntentHrefStringWithQuotesParserRuleCall_0(), currentNode); 
	    }
		lv_IntentHref_0_0=ruleStringWithQuotes		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionOrParagraphReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"IntentHref",
	        		lv_IntentHref_0_0, 
	        		"StringWithQuotes", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;







// Entry rule entryRuleLabelDeclarationReference
entryRuleLabelDeclarationReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLabelDeclarationReferenceRule(), currentNode); }
	 iv_ruleLabelDeclarationReference=ruleLabelDeclarationReference 
	 { $current=$iv_ruleLabelDeclarationReference.current; } 
	 EOF 
;

// Rule LabelDeclarationReference
ruleLabelDeclarationReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'href' 
    {
        createLeafNode(grammarAccess.getLabelDeclarationReferenceAccess().getHrefKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelDeclarationReferenceAccess().getIntentHrefEStringParserRuleCall_1_0(), currentNode); 
	    }
		lv_IntentHref_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelDeclarationReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"IntentHref",
	        		lv_IntentHref_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	'referencedElement' 
    {
        createLeafNode(grammarAccess.getLabelDeclarationReferenceAccess().getReferencedElementKeyword_2_0(), null); 
    }
(
(
		{
			if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelDeclarationReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
        }
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelDeclarationReferenceAccess().getReferencedElementLabelDeclarationCrossReference_2_1_0(), currentNode); 
	    }
		ruleEString		{ 
	        currentNode = currentNode.getParent();
	    }

)
))?)
;





// Entry rule entryRuleModelingUnitInstructionReference
entryRuleModelingUnitInstructionReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelingUnitInstructionReferenceRule(), currentNode); }
	 iv_ruleModelingUnitInstructionReference=ruleModelingUnitInstructionReference 
	 { $current=$iv_ruleModelingUnitInstructionReference.current; } 
	 EOF 
;

// Rule ModelingUnitInstructionReference
ruleModelingUnitInstructionReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:

    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionReferenceAccess().getModelingUnitInstructionReference_ImplParserRuleCall(), currentNode); 
    }
    this_ModelingUnitInstructionReference_Impl_0=ruleModelingUnitInstructionReference_Impl
    { 
        $current = $this_ModelingUnitInstructionReference_Impl_0.current; 
        currentNode = currentNode.getParent();
    }

;





// Entry rule entryRuleModelingUnitInstruction
entryRuleModelingUnitInstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelingUnitInstructionRule(), currentNode); }
	 iv_ruleModelingUnitInstruction=ruleModelingUnitInstruction 
	 { $current=$iv_ruleModelingUnitInstruction.current; } 
	 EOF 
;

// Rule ModelingUnitInstruction
ruleModelingUnitInstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionAccess().getInstanceLevelInstructionParserRuleCall_0(), currentNode); 
    }
    this_InstanceLevelInstruction_0=ruleInstanceLevelInstruction
    { 
        $current = $this_InstanceLevelInstruction_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionAccess().getResourceDeclarationParserRuleCall_1(), currentNode); 
    }
    this_ResourceDeclaration_1=ruleResourceDeclaration
    { 
        $current = $this_ResourceDeclaration_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionAccess().getContributionInstructionParserRuleCall_2(), currentNode); 
    }
    this_ContributionInstruction_2=ruleContributionInstruction
    { 
        $current = $this_ContributionInstruction_2.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionAccess().getAnnotationDeclarationParserRuleCall_3(), currentNode); 
    }
    this_AnnotationDeclaration_3=ruleAnnotationDeclaration
    { 
        $current = $this_AnnotationDeclaration_3.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionAccess().getSectionReferenceinModelingUnitParserRuleCall_4(), currentNode); 
    }
    this_SectionReferenceinModelingUnit_4=ruleSectionReferenceinModelingUnit
    { 
        $current = $this_SectionReferenceinModelingUnit_4.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getModelingUnitInstructionAccess().getLabelinModelingUnitParserRuleCall_5(), currentNode); 
    }
    this_LabelinModelingUnit_5=ruleLabelinModelingUnit
    { 
        $current = $this_LabelinModelingUnit_5.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleInstanceLevelInstruction
entryRuleInstanceLevelInstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInstanceLevelInstructionRule(), currentNode); }
	 iv_ruleInstanceLevelInstruction=ruleInstanceLevelInstruction 
	 { $current=$iv_ruleInstanceLevelInstruction.current; } 
	 EOF 
;

// Rule InstanceLevelInstruction
ruleInstanceLevelInstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getInstanceLevelInstructionAccess().getInstanciationInstructionParserRuleCall_0(), currentNode); 
    }
    this_InstanciationInstruction_0=ruleInstanciationInstruction
    { 
        $current = $this_InstanciationInstruction_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getInstanceLevelInstructionAccess().getStructuralFeatureAffectationParserRuleCall_1(), currentNode); 
    }
    this_StructuralFeatureAffectation_1=ruleStructuralFeatureAffectation
    { 
        $current = $this_StructuralFeatureAffectation_1.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleValueForStructuralFeature
entryRuleValueForStructuralFeature returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getValueForStructuralFeatureRule(), currentNode); }
	 iv_ruleValueForStructuralFeature=ruleValueForStructuralFeature 
	 { $current=$iv_ruleValueForStructuralFeature.current; } 
	 EOF 
;

// Rule ValueForStructuralFeature
ruleValueForStructuralFeature returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
    { 
        currentNode=createCompositeNode(grammarAccess.getValueForStructuralFeatureAccess().getNativeValueForStructuralFeatureParserRuleCall_0(), currentNode); 
    }
    this_NativeValueForStructuralFeature_0=ruleNativeValueForStructuralFeature
    { 
        $current = $this_NativeValueForStructuralFeature_0.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getValueForStructuralFeatureAccess().getReferenceValueForStructuralFeatureParserRuleCall_1(), currentNode); 
    }
    this_ReferenceValueForStructuralFeature_1=ruleReferenceValueForStructuralFeature
    { 
        $current = $this_ReferenceValueForStructuralFeature_1.current; 
        currentNode = currentNode.getParent();
    }

    |
    { 
        currentNode=createCompositeNode(grammarAccess.getValueForStructuralFeatureAccess().getNewObjectValueForStructuralFeatureParserRuleCall_2(), currentNode); 
    }
    this_NewObjectValueForStructuralFeature_2=ruleNewObjectValueForStructuralFeature
    { 
        $current = $this_NewObjectValueForStructuralFeature_2.current; 
        currentNode = currentNode.getParent();
    }
)
;





// Entry rule entryRuleModelingUnitInstructionReference_Impl
entryRuleModelingUnitInstructionReference_Impl returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getModelingUnitInstructionReference_ImplRule(), currentNode); }
	 iv_ruleModelingUnitInstructionReference_Impl=ruleModelingUnitInstructionReference_Impl 
	 { $current=$iv_ruleModelingUnitInstructionReference_Impl.current; } 
	 EOF 
;

// Rule ModelingUnitInstructionReference_Impl
ruleModelingUnitInstructionReference_Impl returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		lv_IntentHref_0_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getModelingUnitInstructionReference_ImplAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_0(), "IntentHref"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getModelingUnitInstructionReference_ImplRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"IntentHref",
	        		lv_IntentHref_0_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)
;





// Entry rule entryRuleSectionReferenceinModelingUnit
entryRuleSectionReferenceinModelingUnit returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getSectionReferenceinModelingUnitRule(), currentNode); }
	 iv_ruleSectionReferenceinModelingUnit=ruleSectionReferenceinModelingUnit 
	 { $current=$iv_ruleSectionReferenceinModelingUnit.current; } 
	 EOF 
;

// Rule SectionReferenceinModelingUnit
ruleSectionReferenceinModelingUnit returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@see' 
    {
        createLeafNode(grammarAccess.getSectionReferenceinModelingUnitAccess().getSeeKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionReferenceinModelingUnitAccess().getReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0(), currentNode); 
	    }
		lv_referencedObject_1_0=ruleSectionOrParagraphReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionReferenceinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencedObject",
	        		lv_referencedObject_1_0, 
	        		"SectionOrParagraphReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getSectionReferenceinModelingUnitAccess().getTextToPrintEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_textToPrint_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionReferenceinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"textToPrint",
	        		lv_textToPrint_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_lineBreak_3_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getSectionReferenceinModelingUnitAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getSectionReferenceinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleLabelinModelingUnit
entryRuleLabelinModelingUnit returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getLabelinModelingUnitRule(), currentNode); }
	 iv_ruleLabelinModelingUnit=ruleLabelinModelingUnit 
	 { $current=$iv_ruleLabelinModelingUnit.current; } 
	 EOF 
;

// Rule LabelinModelingUnit
ruleLabelinModelingUnit returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelinModelingUnitAccess().getTypeTypeLabelEnumRuleCall_0_0(), currentNode); 
	    }
		lv_type_0_0=ruleTypeLabel		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"type",
	        		lv_type_0_0, 
	        		"TypeLabel", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelinModelingUnitAccess().getLabelValueEStringParserRuleCall_1_0(), currentNode); 
	    }
		lv_labelValue_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"labelValue",
	        		lv_labelValue_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getLabelinModelingUnitAccess().getTextToPrintEStringParserRuleCall_2_0(), currentNode); 
	    }
		lv_textToPrint_2_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"textToPrint",
	        		lv_textToPrint_2_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)?(
(
		lv_lineBreak_3_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getLabelinModelingUnitAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getLabelinModelingUnitRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleAnnotationDeclaration
entryRuleAnnotationDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getAnnotationDeclarationRule(), currentNode); }
	 iv_ruleAnnotationDeclaration=ruleAnnotationDeclaration 
	 { $current=$iv_ruleAnnotationDeclaration.current; } 
	 EOF 
;

// Rule AnnotationDeclaration
ruleAnnotationDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'@Annotation' 
    {
        createLeafNode(grammarAccess.getAnnotationDeclarationAccess().getAnnotationKeyword_0(), null); 
    }
(
(
		lv_annotationID_1_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getAnnotationDeclarationAccess().getAnnotationIDStringWithoutQuotesTerminalRuleCall_1_0(), "annotationID"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"annotationID",
	        		lv_annotationID_1_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationDeclarationAccess().getMapKeyValForAnnotationParserRuleCall_2_0(), currentNode); 
	    }
		lv_map_2_0=ruleKeyValForAnnotation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"map",
	        		lv_map_2_0, 
	        		"KeyValForAnnotation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getAnnotationDeclarationAccess().getCommaKeyword_3_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getAnnotationDeclarationAccess().getMapKeyValForAnnotationParserRuleCall_3_1_0(), currentNode); 
	    }
		lv_map_4_0=ruleKeyValForAnnotation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"map",
	        		lv_map_4_0, 
	        		"KeyValForAnnotation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*(
(
		lv_lineBreak_5_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getAnnotationDeclarationAccess().getLineBreakLINE_BREAKTerminalRuleCall_4_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getAnnotationDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleInstanciationInstruction
entryRuleInstanciationInstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInstanciationInstructionRule(), currentNode); }
	 iv_ruleInstanciationInstruction=ruleInstanciationInstruction 
	 { $current=$iv_ruleInstanciationInstruction.current; } 
	 EOF 
;

// Rule InstanciationInstruction
ruleInstanciationInstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'new' 
    {
        createLeafNode(grammarAccess.getInstanciationInstructionAccess().getNewKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanciationInstructionAccess().getMetaTypeTypeReferenceParserRuleCall_1_0(), currentNode); 
	    }
		lv_metaType_1_0=ruleTypeReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanciationInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"metaType",
	        		lv_metaType_1_0, 
	        		"TypeReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_name_2_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getInstanciationInstructionAccess().getNameStringWithoutQuotesTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanciationInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getInstanciationInstructionAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getInstanciationInstructionAccess().getStructuralFeaturesStructuralFeatureAffectationParserRuleCall_4_0(), currentNode); 
	    }
		lv_structuralFeatures_4_0=ruleStructuralFeatureAffectation		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanciationInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"structuralFeatures",
	        		lv_structuralFeatures_4_0, 
	        		"StructuralFeatureAffectation", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getInstanciationInstructionAccess().getRightCurlyBracketKeyword_5(), null); 
    }
(
(
		lv_lineBreak_6_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getInstanciationInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_6_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanciationInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleStructuralFeatureAffectation
entryRuleStructuralFeatureAffectation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getStructuralFeatureAffectationRule(), currentNode); }
	 iv_ruleStructuralFeatureAffectation=ruleStructuralFeatureAffectation 
	 { $current=$iv_ruleStructuralFeatureAffectation.current; } 
	 EOF 
;

// Rule StructuralFeatureAffectation
ruleStructuralFeatureAffectation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		lv_name_0_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getStructuralFeatureAffectationAccess().getNameStringWithoutQuotesTerminalRuleCall_0_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_0_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructuralFeatureAffectationAccess().getUsedOperatorAffectationOperatorEnumRuleCall_1_0_0(), currentNode); 
	    }
		lv_usedOperator_1_0=ruleAffectationOperator		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"usedOperator",
	        		lv_usedOperator_1_0, 
	        		"AffectationOperator", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructuralFeatureAffectationAccess().getValuesValueForStructuralFeatureParserRuleCall_1_1_0_0(), currentNode); 
	    }
		lv_values_2_0=ruleValueForStructuralFeature		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_2_0, 
	        		"ValueForStructuralFeature", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
    |(	'[' 
    {
        createLeafNode(grammarAccess.getStructuralFeatureAffectationAccess().getLeftSquareBracketKeyword_1_1_1_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructuralFeatureAffectationAccess().getValuesValueForStructuralFeatureParserRuleCall_1_1_1_1_0(), currentNode); 
	    }
		lv_values_4_0=ruleValueForStructuralFeature		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_4_0, 
	        		"ValueForStructuralFeature", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(	',' 
    {
        createLeafNode(grammarAccess.getStructuralFeatureAffectationAccess().getCommaKeyword_1_1_1_2_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getStructuralFeatureAffectationAccess().getValuesValueForStructuralFeatureParserRuleCall_1_1_1_2_1_0(), currentNode); 
	    }
		lv_values_6_0=ruleValueForStructuralFeature		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"values",
	        		lv_values_6_0, 
	        		"ValueForStructuralFeature", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))*	']' 
    {
        createLeafNode(grammarAccess.getStructuralFeatureAffectationAccess().getRightSquareBracketKeyword_1_1_1_3(), null); 
    }
)))	';' 
    {
        createLeafNode(grammarAccess.getStructuralFeatureAffectationAccess().getSemicolonKeyword_2(), null); 
    }
(
(
		lv_lineBreak_9_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getStructuralFeatureAffectationAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleNativeValueForStructuralFeature
entryRuleNativeValueForStructuralFeature returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNativeValueForStructuralFeatureRule(), currentNode); }
	 iv_ruleNativeValueForStructuralFeature=ruleNativeValueForStructuralFeature 
	 { $current=$iv_ruleNativeValueForStructuralFeature.current; } 
	 EOF 
;

// Rule NativeValueForStructuralFeature
ruleNativeValueForStructuralFeature returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNativeValueForStructuralFeatureAccess().getValueStringWithQuotesParserRuleCall_0_0(), currentNode); 
	    }
		lv_value_0_0=ruleStringWithQuotes		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNativeValueForStructuralFeatureRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"StringWithQuotes", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)(
(
		lv_lineBreak_1_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getNativeValueForStructuralFeatureAccess().getLineBreakLINE_BREAKTerminalRuleCall_1_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNativeValueForStructuralFeatureRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleNewObjectValueForStructuralFeature
entryRuleNewObjectValueForStructuralFeature returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getNewObjectValueForStructuralFeatureRule(), currentNode); }
	 iv_ruleNewObjectValueForStructuralFeature=ruleNewObjectValueForStructuralFeature 
	 { $current=$iv_ruleNewObjectValueForStructuralFeature.current; } 
	 EOF 
;

// Rule NewObjectValueForStructuralFeature
ruleNewObjectValueForStructuralFeature returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getNewObjectValueForStructuralFeatureAccess().getValueInstanciationInstructionParserRuleCall_0(), currentNode); 
	    }
		lv_value_0_0=ruleInstanciationInstruction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getNewObjectValueForStructuralFeatureRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_0_0, 
	        		"InstanciationInstruction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleReferenceValueForStructuralFeature
entryRuleReferenceValueForStructuralFeature returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getReferenceValueForStructuralFeatureRule(), currentNode); }
	 iv_ruleReferenceValueForStructuralFeature=ruleReferenceValueForStructuralFeature 
	 { $current=$iv_ruleReferenceValueForStructuralFeature.current; } 
	 EOF 
;

// Rule ReferenceValueForStructuralFeature
ruleReferenceValueForStructuralFeature returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getReferenceValueForStructuralFeatureAccess().getReferencedElementInstanciationInstructionReferenceParserRuleCall_0(), currentNode); 
	    }
		lv_referencedElement_0_0=ruleInstanciationInstructionReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getReferenceValueForStructuralFeatureRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencedElement",
	        		lv_referencedElement_0_0, 
	        		"InstanciationInstructionReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)
;





// Entry rule entryRuleContributionInstruction
entryRuleContributionInstruction returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getContributionInstructionRule(), currentNode); }
	 iv_ruleContributionInstruction=ruleContributionInstruction 
	 { $current=$iv_ruleContributionInstruction.current; } 
	 EOF 
;

// Rule ContributionInstruction
ruleContributionInstruction returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContributionInstructionAccess().getReferencedElementModelingUnitInstructionReferenceParserRuleCall_0_0(), currentNode); 
	    }
		lv_referencedElement_0_0=ruleModelingUnitInstructionReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContributionInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"referencedElement",
	        		lv_referencedElement_0_0, 
	        		"ModelingUnitInstructionReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	'{' 
    {
        createLeafNode(grammarAccess.getContributionInstructionAccess().getLeftCurlyBracketKeyword_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getContributionInstructionAccess().getContributionsModelingUnitInstructionParserRuleCall_2_0(), currentNode); 
	    }
		lv_contributions_2_0=ruleModelingUnitInstruction		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContributionInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"contributions",
	        		lv_contributions_2_0, 
	        		"ModelingUnitInstruction", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)*	'}' 
    {
        createLeafNode(grammarAccess.getContributionInstructionAccess().getRightCurlyBracketKeyword_3(), null); 
    }
(
(
		lv_lineBreak_4_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getContributionInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_4_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getContributionInstructionRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleTypeReference
entryRuleTypeReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getTypeReferenceRule(), currentNode); }
	 iv_ruleTypeReference=ruleTypeReference 
	 { $current=$iv_ruleTypeReference.current; } 
	 EOF 
;

// Rule TypeReference
ruleTypeReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_IntentHref_1_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getTypeReferenceAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0(), "IntentHref"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getTypeReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"IntentHref",
	        		lv_IntentHref_1_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleInstanciationInstructionReference
entryRuleInstanciationInstructionReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getInstanciationInstructionReferenceRule(), currentNode); }
	 iv_ruleInstanciationInstructionReference=ruleInstanciationInstructionReference 
	 { $current=$iv_ruleInstanciationInstructionReference.current; } 
	 EOF 
;

// Rule InstanciationInstructionReference
ruleInstanciationInstructionReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getInstanciationInstructionReferenceAccess().getInstanciationInstructionReferenceAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getInstanciationInstructionReferenceAccess().getInstanciationInstructionReferenceAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_IntentHref_1_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getInstanciationInstructionReferenceAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0(), "IntentHref"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getInstanciationInstructionReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"IntentHref",
	        		lv_IntentHref_1_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
))
;





// Entry rule entryRuleKeyValForAnnotation
entryRuleKeyValForAnnotation returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getKeyValForAnnotationRule(), currentNode); }
	 iv_ruleKeyValForAnnotation=ruleKeyValForAnnotation 
	 { $current=$iv_ruleKeyValForAnnotation.current; } 
	 EOF 
;

// Rule KeyValForAnnotation
ruleKeyValForAnnotation returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getKeyValForAnnotationAccess().getKeyValForAnnotationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getKeyValForAnnotationAccess().getKeyValForAnnotationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)(
(
		lv_key_1_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getKeyValForAnnotationAccess().getKeyStringWithoutQuotesTerminalRuleCall_1_0(), "key"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyValForAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"key",
	        		lv_key_1_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	'=' 
    {
        createLeafNode(grammarAccess.getKeyValForAnnotationAccess().getEqualsSignKeyword_2(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getKeyValForAnnotationAccess().getValueEStringParserRuleCall_3_0(), currentNode); 
	    }
		lv_value_3_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getKeyValForAnnotationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"value",
	        		lv_value_3_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
))
;





// Entry rule entryRuleResourceReference
entryRuleResourceReference returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getResourceReferenceRule(), currentNode); }
	 iv_ruleResourceReference=ruleResourceReference 
	 { $current=$iv_ruleResourceReference.current; } 
	 EOF 
;

// Rule ResourceReference
ruleResourceReference returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
(	'[' 
    {
        createLeafNode(grammarAccess.getResourceReferenceAccess().getLeftSquareBracketKeyword_0(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceReferenceAccess().getIntentHrefEStringParserRuleCall_1_0(), currentNode); 
	    }
		lv_IntentHref_1_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"IntentHref",
	        		lv_IntentHref_1_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	']' 
    {
        createLeafNode(grammarAccess.getResourceReferenceAccess().getRightSquareBracketKeyword_2(), null); 
    }
(
(
		lv_lineBreak_3_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getResourceReferenceAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceReferenceRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Entry rule entryRuleResourceDeclaration
entryRuleResourceDeclaration returns [EObject current=null] 
	:
	{ currentNode = createCompositeNode(grammarAccess.getResourceDeclarationRule(), currentNode); }
	 iv_ruleResourceDeclaration=ruleResourceDeclaration 
	 { $current=$iv_ruleResourceDeclaration.current; } 
	 EOF 
;

// Rule ResourceDeclaration
ruleResourceDeclaration returns [EObject current=null] 
    @init { EObject temp=null; setCurrentLookahead(); resetLookahead(); 
    }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((
    { 
        temp=factory.create(grammarAccess.getResourceDeclarationAccess().getResourceDeclarationAction_0().getType().getClassifier());
        $current = temp; 
        temp = null;
        CompositeNode newNode = createCompositeNode(grammarAccess.getResourceDeclarationAccess().getResourceDeclarationAction_0(), currentNode.getParent());
    newNode.getChildren().add(currentNode);
    moveLookaheadInfo(currentNode, newNode);
    currentNode = newNode; 
        associateNodeWithAstElement(currentNode, $current); 
    }
)	'Resource' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getResourceKeyword_1(), null); 
    }
(
(
		lv_name_2_0=RULE_STRINGWITHOUTQUOTES
		{
			createLeafNode(grammarAccess.getResourceDeclarationAccess().getNameStringWithoutQuotesTerminalRuleCall_2_0(), "name"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"name",
	        		lv_name_2_0, 
	        		"StringWithoutQuotes", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?	'{' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getLeftCurlyBracketKeyword_3(), null); 
    }
(RULE_LINE_BREAK
    { 
    createLeafNode(grammarAccess.getResourceDeclarationAccess().getLINE_BREAKTerminalRuleCall_4(), null); 
    }
)?(	'URI' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getURIKeyword_5_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getEqualsSignKeyword_5_1(), null); 
    }
(
(
		lv_uri_7_0=RULE_URI
		{
			createLeafNode(grammarAccess.getResourceDeclarationAccess().getUriURITerminalRuleCall_5_2_0(), "uri"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"uri",
	        		lv_uri_7_0, 
	        		"URI", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_5_3(), null); 
    }
(RULE_LINE_BREAK
    { 
    createLeafNode(grammarAccess.getResourceDeclarationAccess().getLINE_BREAKTerminalRuleCall_5_4(), null); 
    }
)?)?(	'contentType' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getContentTypeKeyword_6_0(), null); 
    }
	'=' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getEqualsSignKeyword_6_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceDeclarationAccess().getContentTypeEStringParserRuleCall_6_2_0(), currentNode); 
	    }
		lv_contentType_12_0=ruleEString		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"contentType",
	        		lv_contentType_12_0, 
	        		"EString", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_6_3(), null); 
    }
(RULE_LINE_BREAK
    { 
    createLeafNode(grammarAccess.getResourceDeclarationAccess().getLINE_BREAKTerminalRuleCall_6_4(), null); 
    }
)?)?(	'content' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getContentKeyword_7_0(), null); 
    }
	'+=' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getPlusSignEqualsSignKeyword_7_1(), null); 
    }
(
(
		{ 
	        currentNode=createCompositeNode(grammarAccess.getResourceDeclarationAccess().getContentModelingUnitInstructionReferenceParserRuleCall_7_2_0(), currentNode); 
	    }
		lv_content_17_0=ruleModelingUnitInstructionReference		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode.getParent(), $current);
	        }
	        try {
	       		add(
	       			$current, 
	       			"content",
	        		lv_content_17_0, 
	        		"ModelingUnitInstructionReference", 
	        		currentNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	        currentNode = currentNode.getParent();
	    }

)
)	';' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_7_3(), null); 
    }
(RULE_LINE_BREAK
    { 
    createLeafNode(grammarAccess.getResourceDeclarationAccess().getLINE_BREAKTerminalRuleCall_7_4(), null); 
    }
)?)*	'}' 
    {
        createLeafNode(grammarAccess.getResourceDeclarationAccess().getRightCurlyBracketKeyword_8(), null); 
    }
(
(
		lv_lineBreak_21_0=RULE_LINE_BREAK
		{
			createLeafNode(grammarAccess.getResourceDeclarationAccess().getLineBreakLINE_BREAKTerminalRuleCall_9_0(), "lineBreak"); 
		}
		{
	        if ($current==null) {
	            $current = factory.create(grammarAccess.getResourceDeclarationRule().getType().getClassifier());
	            associateNodeWithAstElement(currentNode, $current);
	        }
	        try {
	       		set(
	       			$current, 
	       			"lineBreak",
	        		true, 
	        		"LINE_BREAK", 
	        		lastConsumedNode);
	        } catch (ValueConverterException vce) {
				handleValueConverterException(vce);
	        }
	    }

)
)?)
;





// Rule TypeLabel
ruleTypeLabel returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'@lazylabel' 
	{
        $current = grammarAccess.getTypeLabelAccess().getLAZYEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getTypeLabelAccess().getLAZYEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'@label' 
	{
        $current = grammarAccess.getTypeLabelAccess().getEXPLICITEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getTypeLabelAccess().getEXPLICITEnumLiteralDeclaration_1(), null); 
    }
));



// Rule AffectationOperator
ruleAffectationOperator returns [Enumerator current=null] 
    @init { setCurrentLookahead(); resetLookahead(); }
    @after { resetLookahead(); 
    	lastConsumedNode = currentNode;
    }:
((	'+=' 
	{
        $current = grammarAccess.getAffectationOperatorAccess().getMULTI_VALUED_AFFECTATIONEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getAffectationOperatorAccess().getMULTI_VALUED_AFFECTATIONEnumLiteralDeclaration_0(), null); 
    }
)
    |(	'=' 
	{
        $current = grammarAccess.getAffectationOperatorAccess().getSINGLE_VALUED_AFFECTATIONEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        createLeafNode(grammarAccess.getAffectationOperatorAccess().getSINGLE_VALUED_AFFECTATIONEnumLiteralDeclaration_1(), null); 
    }
));



RULE_EINT : RULE_INT;

RULE_STRINGWITHOUTQUOTES : ('a'..'z'|'A'..'Z'|'0'..'9'|'.'|':'|'_'|'-')+;

RULE_URI : '"' ('file:/'|'platform:/'|'cdo:/') ('a'..'z'|'A'..'Z'|'0'..'9'|'.'|'/'|':'|'_'|'-')+ '"';

RULE_LINE_BREAK : '\n';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


