/*
* generated by Xtext
*/
package org.eclipse.mylyn.docs.intent.parser.modelingunit.parseTreeConstruction;

import org.eclipse.emf.ecore.*;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parsetree.reconstr.IEObjectConsumer;
import org.eclipse.xtext.parsetree.reconstr.impl.AbstractParseTreeConstructor;

import org.eclipse.mylyn.docs.intent.parser.modelingunit.services.ModelingUnitXTextGrammarGrammarAccess;

import com.google.inject.Inject;

@SuppressWarnings("all")
public class ModelingUnitXTextGrammarParsetreeConstructor extends AbstractParseTreeConstructor {
		
	@Inject
	private ModelingUnitXTextGrammarGrammarAccess grammarAccess;
	
	@Override
	protected AbstractToken getRootToken(IEObjectConsumer inst) {
		return new ThisRootNode(inst);	
	}
	
protected class ThisRootNode extends RootToken {
	public ThisRootNode(IEObjectConsumer inst) {
		super(inst);
	}
	
	@Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnit_Group(this, this, 0, inst);
			case 1: return new UnitInstruction_Alternatives(this, this, 1, inst);
			case 2: return new LabelReferenceInstruction_Group(this, this, 2, inst);
			case 3: return new SectionReferenceInstruction_Group(this, this, 3, inst);
			case 4: return new AdressedAnnotation_Group(this, this, 4, inst);
			case 5: return new SectionOrParagraphReference_IntentHrefAssignment(this, this, 5, inst);
			case 6: return new UnitInstructionReference_Group(this, this, 6, inst);
			case 7: return new LabelDeclarationReference_Group(this, this, 7, inst);
			case 8: return new ModelingUnitInstructionReference_ModelingUnitInstructionReference_ImplParserRuleCall(this, this, 8, inst);
			case 9: return new ModelingUnitInstruction_Alternatives(this, this, 9, inst);
			case 10: return new InstanceLevelInstruction_Alternatives(this, this, 10, inst);
			case 11: return new ValueForStructuralFeature_Alternatives(this, this, 11, inst);
			case 12: return new ModelingUnitInstructionReference_Impl_IntentHrefAssignment(this, this, 12, inst);
			case 13: return new SectionReferenceinModelingUnit_Group(this, this, 13, inst);
			case 14: return new LabelinModelingUnit_Group(this, this, 14, inst);
			case 15: return new AnnotationDeclaration_Group(this, this, 15, inst);
			case 16: return new InstanciationInstruction_Group(this, this, 16, inst);
			case 17: return new StructuralFeatureAffectation_Group(this, this, 17, inst);
			case 18: return new NativeValueForStructuralFeature_Group(this, this, 18, inst);
			case 19: return new NewObjectValueForStructuralFeature_ValueAssignment(this, this, 19, inst);
			case 20: return new ReferenceValueForStructuralFeature_ReferencedElementAssignment(this, this, 20, inst);
			case 21: return new ContributionInstruction_Group(this, this, 21, inst);
			case 22: return new TypeReference_Group(this, this, 22, inst);
			case 23: return new InstanciationInstructionReference_Group(this, this, 23, inst);
			case 24: return new KeyValForAnnotation_Group(this, this, 24, inst);
			case 25: return new ResourceReference_Group(this, this, 25, inst);
			case 26: return new ResourceDeclaration_Group(this, this, 26, inst);
			default: return null;
		}	
	}	
}
	

/************ begin Rule ModelingUnit ****************
 *
 * // Entry rule : Beginning of a Modeling Unit.
 * ModelingUnit returns modelingUnit::ModelingUnit:
 * 	{modelingUnit::ModelingUnit} // A Modeling Unit may have a name
 * 	unitName=StringWithoutQuotes? LINE_BREAK? // A Modeling may be attache to a resource
 * 	resource=ResourceReference? // A Modeling Unit is composed of ModelingUnitInstruction or some insctructions avalaible in a Generic Unit.
 * 	instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*;
 *
 **/

// {modelingUnit::ModelingUnit} // A Modeling Unit may have a name
// unitName=StringWithoutQuotes? LINE_BREAK? // A Modeling may be attache to a resource
// resource=ResourceReference? // A Modeling Unit is composed of ModelingUnitInstruction or some insctructions avalaible in a Generic Unit.
// instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*
protected class ModelingUnit_Group extends GroupToken {
	
	public ModelingUnit_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getModelingUnitAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnit_InstructionsAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModelingUnit_ResourceAssignment_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ModelingUnit_UnitNameAssignment_1(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ModelingUnit_ModelingUnitAction_0(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelingUnitAccess().getModelingUnitAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {modelingUnit::ModelingUnit}
protected class ModelingUnit_ModelingUnitAction_0 extends ActionToken  {

	public ModelingUnit_ModelingUnitAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getModelingUnitAccess().getModelingUnitAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// unitName=StringWithoutQuotes?
protected class ModelingUnit_UnitNameAssignment_1 extends AssignmentToken  {
	
	public ModelingUnit_UnitNameAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelingUnitAccess().getUnitNameAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnit_ModelingUnitAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("unitName",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("unitName");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelingUnitAccess().getUnitNameStringWithoutQuotesTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelingUnitAccess().getUnitNameStringWithoutQuotesTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// resource=ResourceReference?
protected class ModelingUnit_ResourceAssignment_3 extends AssignmentToken  {
	
	public ModelingUnit_ResourceAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelingUnitAccess().getResourceAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("resource",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("resource");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getResourceReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelingUnitAccess().getResourceResourceReferenceParserRuleCall_3_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModelingUnit_UnitNameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModelingUnit_ModelingUnitAction_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// instructions+=(ModelingUnitInstruction | LabelReferenceInstruction | AdressedAnnotation)*
protected class ModelingUnit_InstructionsAssignment_4 extends AssignmentToken  {
	
	public ModelingUnit_InstructionsAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelingUnitAccess().getInstructionsAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnitInstruction_Alternatives(this, this, 0, inst);
			case 1: return new LabelReferenceInstruction_Group(this, this, 1, inst);
			case 2: return new AdressedAnnotation_Group(this, this, 2, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("instructions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("instructions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelingUnitInstructionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelingUnitAccess().getInstructionsModelingUnitInstructionParserRuleCall_4_0_0(); 
				consumed = obj;
				return param;
			}
		}
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelingUnitAccess().getInstructionsLabelReferenceInstructionParserRuleCall_4_0_1(); 
				consumed = obj;
				return param;
			}
		}
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getAdressedAnnotationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getModelingUnitAccess().getInstructionsAdressedAnnotationParserRuleCall_4_0_2(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ModelingUnit_InstructionsAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ModelingUnit_ResourceAssignment_3(lastRuleCallOrigin, next, actIndex, consumed);
			case 2: return new ModelingUnit_UnitNameAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			case 3: return new ModelingUnit_ModelingUnitAction_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


/************ end Rule ModelingUnit ****************/





/************ begin Rule UnitInstruction ****************
 *
 * / * ------------ END ENUM AND DATATYPES ------------ * /
 * / * ------------ GENERIC INSTRUCTIONS FROM GENERIC UNIT ------------ * / UnitInstruction returns
 * genericUnit::UnitInstruction:
 * 	SectionReferenceInstruction | LabelReferenceInstruction | AdressedAnnotation;
 *
 **/

// SectionReferenceInstruction | LabelReferenceInstruction | AdressedAnnotation
protected class UnitInstruction_Alternatives extends AlternativesToken {

	public UnitInstruction_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getUnitInstructionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnitInstruction_SectionReferenceInstructionParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new UnitInstruction_LabelReferenceInstructionParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new UnitInstruction_AdressedAnnotationParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAdressedAnnotationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSectionReferenceInstructionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// SectionReferenceInstruction
protected class UnitInstruction_SectionReferenceInstructionParserRuleCall_0 extends RuleCallToken {
	
	public UnitInstruction_SectionReferenceInstructionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnitInstructionAccess().getSectionReferenceInstructionParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceInstruction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSectionReferenceInstructionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(SectionReferenceInstruction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LabelReferenceInstruction
protected class UnitInstruction_LabelReferenceInstructionParserRuleCall_1 extends RuleCallToken {
	
	public UnitInstruction_LabelReferenceInstructionParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnitInstructionAccess().getLabelReferenceInstructionParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelReferenceInstruction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(LabelReferenceInstruction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// AdressedAnnotation
protected class UnitInstruction_AdressedAnnotationParserRuleCall_2 extends RuleCallToken {
	
	public UnitInstruction_AdressedAnnotationParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getUnitInstructionAccess().getAdressedAnnotationParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAdressedAnnotationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(AdressedAnnotation_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule UnitInstruction ****************/


/************ begin Rule LabelReferenceInstruction ****************
 *
 * LabelReferenceInstruction returns genericUnit::LabelReferenceInstruction:
 * 	"@see" //COMMENT RENSEIGNER CE TYPE ? 
 * 	type=TypeLabel referencedLabel=LabelDeclarationReference lineBreak?=LINE_BREAK?;
 *
 **/

// "@see" //COMMENT RENSEIGNER CE TYPE ? 
// type=TypeLabel referencedLabel=LabelDeclarationReference lineBreak?=LINE_BREAK?
protected class LabelReferenceInstruction_Group extends GroupToken {
	
	public LabelReferenceInstruction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLabelReferenceInstructionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelReferenceInstruction_LineBreakAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LabelReferenceInstruction_ReferencedLabelAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLabelReferenceInstructionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "@see"
protected class LabelReferenceInstruction_SeeKeyword_0 extends KeywordToken  {
	
	public LabelReferenceInstruction_SeeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLabelReferenceInstructionAccess().getSeeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// //COMMENT RENSEIGNER CE TYPE ? 
// type=TypeLabel
protected class LabelReferenceInstruction_TypeAssignment_1 extends AssignmentToken  {
	
	public LabelReferenceInstruction_TypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelReferenceInstructionAccess().getTypeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelReferenceInstruction_SeeKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getLabelReferenceInstructionAccess().getTypeTypeLabelEnumRuleCall_1_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getLabelReferenceInstructionAccess().getTypeTypeLabelEnumRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// referencedLabel=LabelDeclarationReference
protected class LabelReferenceInstruction_ReferencedLabelAssignment_2 extends AssignmentToken  {
	
	public LabelReferenceInstruction_ReferencedLabelAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelReferenceInstructionAccess().getReferencedLabelAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelDeclarationReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referencedLabel",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referencedLabel");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLabelDeclarationReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getLabelReferenceInstructionAccess().getReferencedLabelLabelDeclarationReferenceParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new LabelReferenceInstruction_TypeAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// lineBreak?=LINE_BREAK?
protected class LabelReferenceInstruction_LineBreakAssignment_3 extends AssignmentToken  {
	
	public LabelReferenceInstruction_LineBreakAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelReferenceInstructionAccess().getLineBreakAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelReferenceInstruction_ReferencedLabelAssignment_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLabelReferenceInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLabelReferenceInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule LabelReferenceInstruction ****************/


/************ begin Rule SectionReferenceInstruction ****************
 *
 * SectionReferenceInstruction returns genericUnit::IntentSectionReferenceInstruction:
 * 	"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?;
 *
 **/

// "@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?
protected class SectionReferenceInstruction_Group extends GroupToken {
	
	public SectionReferenceInstruction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSectionReferenceInstructionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceInstruction_LineBreakAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SectionReferenceInstruction_TextToPrintAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SectionReferenceInstruction_ReferencedObjectAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSectionReferenceInstructionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "@see"
protected class SectionReferenceInstruction_SeeKeyword_0 extends KeywordToken  {
	
	public SectionReferenceInstruction_SeeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSectionReferenceInstructionAccess().getSeeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// referencedObject=SectionOrParagraphReference
protected class SectionReferenceInstruction_ReferencedObjectAssignment_1 extends AssignmentToken  {
	
	public SectionReferenceInstruction_ReferencedObjectAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceInstructionAccess().getReferencedObjectAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionOrParagraphReference_IntentHrefAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referencedObject",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referencedObject");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSectionOrParagraphReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSectionReferenceInstructionAccess().getReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SectionReferenceInstruction_SeeKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// textToPrint=EString?
protected class SectionReferenceInstruction_TextToPrintAssignment_2 extends AssignmentToken  {
	
	public SectionReferenceInstruction_TextToPrintAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceInstructionAccess().getTextToPrintAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceInstruction_ReferencedObjectAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textToPrint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textToPrint");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSectionReferenceInstructionAccess().getTextToPrintEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSectionReferenceInstructionAccess().getTextToPrintEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// lineBreak?=LINE_BREAK?
protected class SectionReferenceInstruction_LineBreakAssignment_3 extends AssignmentToken  {
	
	public SectionReferenceInstruction_LineBreakAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceInstructionAccess().getLineBreakAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceInstruction_TextToPrintAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SectionReferenceInstruction_ReferencedObjectAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSectionReferenceInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSectionReferenceInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule SectionReferenceInstruction ****************/


/************ begin Rule AdressedAnnotation ****************
 *
 * AdressedAnnotation returns genericUnit::AdressedAnnotation:
 * 	lineBreak?="lineBreak"? "AdressedAnnotation" "{" "receiver" "{" receiver+=EString ("," receiver+=EString)* "}"
 * 	"source" source=EString "message" message=EString "type" type=EString "}";
 *
 **/

// lineBreak?="lineBreak"? "AdressedAnnotation" "{" "receiver" "{" receiver+=EString ("," receiver+=EString)* "}" "source"
// source=EString "message" message=EString "type" type=EString "}"
protected class AdressedAnnotation_Group extends GroupToken {
	
	public AdressedAnnotation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_RightCurlyBracketKeyword_14(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAdressedAnnotationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// lineBreak?="lineBreak"?
protected class AdressedAnnotation_LineBreakAssignment_0 extends AssignmentToken  {
	
	public AdressedAnnotation_LineBreakAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getLineBreakAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(Boolean.TRUE.equals(value)) { // org::eclipse::xtext::impl::KeywordImpl
			type = AssignmentType.KEYWORD;
			element = grammarAccess.getAdressedAnnotationAccess().getLineBreakLineBreakKeyword_0_0();
			return obj;
		}
		return null;
	}

}

// "AdressedAnnotation"
protected class AdressedAnnotation_AdressedAnnotationKeyword_1 extends KeywordToken  {
	
	public AdressedAnnotation_AdressedAnnotationKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getAdressedAnnotationKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_LineBreakAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index - 1, inst);
		}	
	}

}

// "{"
protected class AdressedAnnotation_LeftCurlyBracketKeyword_2 extends KeywordToken  {
	
	public AdressedAnnotation_LeftCurlyBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getLeftCurlyBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_AdressedAnnotationKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "receiver"
protected class AdressedAnnotation_ReceiverKeyword_3 extends KeywordToken  {
	
	public AdressedAnnotation_ReceiverKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getReceiverKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_LeftCurlyBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "{"
protected class AdressedAnnotation_LeftCurlyBracketKeyword_4 extends KeywordToken  {
	
	public AdressedAnnotation_LeftCurlyBracketKeyword_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getLeftCurlyBracketKeyword_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_ReceiverKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// receiver+=EString
protected class AdressedAnnotation_ReceiverAssignment_5 extends AssignmentToken  {
	
	public AdressedAnnotation_ReceiverAssignment_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getReceiverAssignment_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_LeftCurlyBracketKeyword_4(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("receiver",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("receiver");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAdressedAnnotationAccess().getReceiverEStringParserRuleCall_5_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAdressedAnnotationAccess().getReceiverEStringParserRuleCall_5_0();
			return obj;
		}
		return null;
	}

}

// ("," receiver+=EString)*
protected class AdressedAnnotation_Group_6 extends GroupToken {
	
	public AdressedAnnotation_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_ReceiverAssignment_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AdressedAnnotation_CommaKeyword_6_0 extends KeywordToken  {
	
	public AdressedAnnotation_CommaKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getCommaKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AdressedAnnotation_ReceiverAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// receiver+=EString
protected class AdressedAnnotation_ReceiverAssignment_6_1 extends AssignmentToken  {
	
	public AdressedAnnotation_ReceiverAssignment_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getReceiverAssignment_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_CommaKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("receiver",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("receiver");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAdressedAnnotationAccess().getReceiverEStringParserRuleCall_6_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAdressedAnnotationAccess().getReceiverEStringParserRuleCall_6_1_0();
			return obj;
		}
		return null;
	}

}


// "}"
protected class AdressedAnnotation_RightCurlyBracketKeyword_7 extends KeywordToken  {
	
	public AdressedAnnotation_RightCurlyBracketKeyword_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getRightCurlyBracketKeyword_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_Group_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AdressedAnnotation_ReceiverAssignment_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "source"
protected class AdressedAnnotation_SourceKeyword_8 extends KeywordToken  {
	
	public AdressedAnnotation_SourceKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getSourceKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_RightCurlyBracketKeyword_7(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// source=EString
protected class AdressedAnnotation_SourceAssignment_9 extends AssignmentToken  {
	
	public AdressedAnnotation_SourceAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getSourceAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_SourceKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("source",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("source");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAdressedAnnotationAccess().getSourceEStringParserRuleCall_9_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAdressedAnnotationAccess().getSourceEStringParserRuleCall_9_0();
			return obj;
		}
		return null;
	}

}

// "message"
protected class AdressedAnnotation_MessageKeyword_10 extends KeywordToken  {
	
	public AdressedAnnotation_MessageKeyword_10(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getMessageKeyword_10();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_SourceAssignment_9(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// message=EString
protected class AdressedAnnotation_MessageAssignment_11 extends AssignmentToken  {
	
	public AdressedAnnotation_MessageAssignment_11(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getMessageAssignment_11();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_MessageKeyword_10(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("message",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("message");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAdressedAnnotationAccess().getMessageEStringParserRuleCall_11_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAdressedAnnotationAccess().getMessageEStringParserRuleCall_11_0();
			return obj;
		}
		return null;
	}

}

// "type"
protected class AdressedAnnotation_TypeKeyword_12 extends KeywordToken  {
	
	public AdressedAnnotation_TypeKeyword_12(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getTypeKeyword_12();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_MessageAssignment_11(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// type=EString
protected class AdressedAnnotation_TypeAssignment_13 extends AssignmentToken  {
	
	public AdressedAnnotation_TypeAssignment_13(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getTypeAssignment_13();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_TypeKeyword_12(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAdressedAnnotationAccess().getTypeEStringParserRuleCall_13_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getAdressedAnnotationAccess().getTypeEStringParserRuleCall_13_0();
			return obj;
		}
		return null;
	}

}

// "}"
protected class AdressedAnnotation_RightCurlyBracketKeyword_14 extends KeywordToken  {
	
	public AdressedAnnotation_RightCurlyBracketKeyword_14(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAdressedAnnotationAccess().getRightCurlyBracketKeyword_14();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AdressedAnnotation_TypeAssignment_13(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


/************ end Rule AdressedAnnotation ****************/


/************ begin Rule SectionOrParagraphReference ****************
 *
 * / *	('referencedObject' referencedObject=[markup::StructureElement|EString])?
 *     '}'* /SectionOrParagraphReference returns document::IntentSectionOrParagraphReference:
 * 	IntentHref=StringWithQuotes;
 *
 **/

// IntentHref=StringWithQuotes
protected class SectionOrParagraphReference_IntentHrefAssignment extends AssignmentToken  {
	
	public SectionOrParagraphReference_IntentHrefAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionOrParagraphReferenceAccess().getIntentHrefAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSectionOrParagraphReferenceRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSectionOrParagraphReferenceAccess().getIntentHrefStringWithQuotesParserRuleCall_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSectionOrParagraphReferenceAccess().getIntentHrefStringWithQuotesParserRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule SectionOrParagraphReference ****************/


/************ begin Rule UnitInstructionReference ****************
 *
 * UnitInstructionReference returns genericUnit::UnitInstructionReference:
 * 	"href" IntentHref=EString;
 *
 **/

// "href" IntentHref=EString
protected class UnitInstructionReference_Group extends GroupToken {
	
	public UnitInstructionReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getUnitInstructionReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnitInstructionReference_IntentHrefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getUnitInstructionReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "href"
protected class UnitInstructionReference_HrefKeyword_0 extends KeywordToken  {
	
	public UnitInstructionReference_HrefKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getUnitInstructionReferenceAccess().getHrefKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// IntentHref=EString
protected class UnitInstructionReference_IntentHrefAssignment_1 extends AssignmentToken  {
	
	public UnitInstructionReference_IntentHrefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getUnitInstructionReferenceAccess().getIntentHrefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new UnitInstructionReference_HrefKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getUnitInstructionReferenceAccess().getIntentHrefEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getUnitInstructionReferenceAccess().getIntentHrefEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule UnitInstructionReference ****************/


/************ begin Rule LabelDeclarationReference ****************
 *
 * LabelDeclarationReference returns genericUnit::LabelDeclarationReference:
 * 	"href" IntentHref=EString ("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?;
 *
 **/

// "href" IntentHref=EString ("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?
protected class LabelDeclarationReference_Group extends GroupToken {
	
	public LabelDeclarationReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLabelDeclarationReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelDeclarationReference_Group_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LabelDeclarationReference_IntentHrefAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLabelDeclarationReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "href"
protected class LabelDeclarationReference_HrefKeyword_0 extends KeywordToken  {
	
	public LabelDeclarationReference_HrefKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLabelDeclarationReferenceAccess().getHrefKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// IntentHref=EString
protected class LabelDeclarationReference_IntentHrefAssignment_1 extends AssignmentToken  {
	
	public LabelDeclarationReference_IntentHrefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelDeclarationReferenceAccess().getIntentHrefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelDeclarationReference_HrefKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLabelDeclarationReferenceAccess().getIntentHrefEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLabelDeclarationReferenceAccess().getIntentHrefEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// ("referencedElement" referencedElement=[genericUnit::LabelDeclaration|EString])?
protected class LabelDeclarationReference_Group_2 extends GroupToken {
	
	public LabelDeclarationReference_Group_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLabelDeclarationReferenceAccess().getGroup_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelDeclarationReference_ReferencedElementAssignment_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "referencedElement"
protected class LabelDeclarationReference_ReferencedElementKeyword_2_0 extends KeywordToken  {
	
	public LabelDeclarationReference_ReferencedElementKeyword_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getLabelDeclarationReferenceAccess().getReferencedElementKeyword_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelDeclarationReference_IntentHrefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// referencedElement=[genericUnit::LabelDeclaration|EString]
protected class LabelDeclarationReference_ReferencedElementAssignment_2_1 extends AssignmentToken  {
	
	public LabelDeclarationReference_ReferencedElementAssignment_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelDeclarationReferenceAccess().getReferencedElementAssignment_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelDeclarationReference_ReferencedElementKeyword_2_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referencedElement",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referencedElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::CrossReferenceImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getLabelDeclarationReferenceAccess().getReferencedElementLabelDeclarationCrossReference_2_1_0().getType().getClassifier())) {
				type = AssignmentType.CROSS_REFERENCE;
				element = grammarAccess.getLabelDeclarationReferenceAccess().getReferencedElementLabelDeclarationCrossReference_2_1_0(); 
				return obj;
			}
		}
		return null;
	}

}



/************ end Rule LabelDeclarationReference ****************/


/************ begin Rule ModelingUnitInstructionReference ****************
 *
 * / * ------------ END GENERIC INSTRUCTIONS FROM GENERIC UNIT ------------ * /
 * / * ------------ INSTRUCTIONS FROM MODELING UNIT ------------ * / ModelingUnitInstructionReference returns
 * modelingUnit::ModelingUnitInstructionReference:
 * 	ModelingUnitInstructionReference_Impl;
 *
 **/

// ModelingUnitInstructionReference_Impl
protected class ModelingUnitInstructionReference_ModelingUnitInstructionReference_ImplParserRuleCall extends RuleCallToken {
	
	public ModelingUnitInstructionReference_ModelingUnitInstructionReference_ImplParserRuleCall(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionReferenceAccess().getModelingUnitInstructionReference_ImplParserRuleCall();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnitInstructionReference_Impl_IntentHrefAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelingUnitInstructionReference_ImplRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ModelingUnitInstructionReference_Impl_IntentHrefAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

/************ end Rule ModelingUnitInstructionReference ****************/


/************ begin Rule ModelingUnitInstruction ****************
 *
 * ModelingUnitInstruction returns modelingUnit::ModelingUnitInstruction:
 * 	InstanceLevelInstruction | ResourceDeclaration | ContributionInstruction | AnnotationDeclaration |
 * 	SectionReferenceinModelingUnit | LabelinModelingUnit;
 *
 **/

// InstanceLevelInstruction | ResourceDeclaration | ContributionInstruction | AnnotationDeclaration |
// SectionReferenceinModelingUnit | LabelinModelingUnit
protected class ModelingUnitInstruction_Alternatives extends AlternativesToken {

	public ModelingUnitInstruction_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnitInstruction_InstanceLevelInstructionParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ModelingUnitInstruction_ResourceDeclarationParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ModelingUnitInstruction_ContributionInstructionParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ModelingUnitInstruction_AnnotationDeclarationParserRuleCall_3(lastRuleCallOrigin, this, 3, inst);
			case 4: return new ModelingUnitInstruction_SectionReferenceinModelingUnitParserRuleCall_4(lastRuleCallOrigin, this, 4, inst);
			case 5: return new ModelingUnitInstruction_LabelinModelingUnitParserRuleCall_5(lastRuleCallOrigin, this, 5, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAnnotationDeclarationRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getContributionInstructionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getInstanciationInstructionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getSectionReferenceinModelingUnitRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getLabelinModelingUnitRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getResourceDeclarationAccess().getResourceDeclarationAction_0().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// InstanceLevelInstruction
protected class ModelingUnitInstruction_InstanceLevelInstructionParserRuleCall_0 extends RuleCallToken {
	
	public ModelingUnitInstruction_InstanceLevelInstructionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getInstanceLevelInstructionParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanceLevelInstruction_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInstanciationInstructionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(InstanceLevelInstruction_Alternatives.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ResourceDeclaration
protected class ModelingUnitInstruction_ResourceDeclarationParserRuleCall_1 extends RuleCallToken {
	
	public ModelingUnitInstruction_ResourceDeclarationParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getResourceDeclarationParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getResourceDeclarationAccess().getResourceDeclarationAction_0().getType().getClassifier())
			return null;
		if(checkForRecursion(ResourceDeclaration_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ContributionInstruction
protected class ModelingUnitInstruction_ContributionInstructionParserRuleCall_2 extends RuleCallToken {
	
	public ModelingUnitInstruction_ContributionInstructionParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getContributionInstructionParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContributionInstruction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getContributionInstructionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ContributionInstruction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// AnnotationDeclaration
protected class ModelingUnitInstruction_AnnotationDeclarationParserRuleCall_3 extends RuleCallToken {
	
	public ModelingUnitInstruction_AnnotationDeclarationParserRuleCall_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getAnnotationDeclarationParserRuleCall_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnotationDeclaration_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAnnotationDeclarationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(AnnotationDeclaration_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// SectionReferenceinModelingUnit
protected class ModelingUnitInstruction_SectionReferenceinModelingUnitParserRuleCall_4 extends RuleCallToken {
	
	public ModelingUnitInstruction_SectionReferenceinModelingUnitParserRuleCall_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getSectionReferenceinModelingUnitParserRuleCall_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceinModelingUnit_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSectionReferenceinModelingUnitRule().getType().getClassifier())
			return null;
		if(checkForRecursion(SectionReferenceinModelingUnit_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// LabelinModelingUnit
protected class ModelingUnitInstruction_LabelinModelingUnitParserRuleCall_5 extends RuleCallToken {
	
	public ModelingUnitInstruction_LabelinModelingUnitParserRuleCall_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionAccess().getLabelinModelingUnitParserRuleCall_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelinModelingUnit_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLabelinModelingUnitRule().getType().getClassifier())
			return null;
		if(checkForRecursion(LabelinModelingUnit_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ModelingUnitInstruction ****************/


/************ begin Rule InstanceLevelInstruction ****************
 *
 * InstanceLevelInstruction returns modelingUnit::InstanceLevelInstruction:
 * 	InstanciationInstruction | StructuralFeatureAffectation;
 *
 **/

// InstanciationInstruction | StructuralFeatureAffectation
protected class InstanceLevelInstruction_Alternatives extends AlternativesToken {

	public InstanceLevelInstruction_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getInstanceLevelInstructionAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanceLevelInstruction_InstanciationInstructionParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InstanceLevelInstruction_StructuralFeatureAffectationParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInstanciationInstructionRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// InstanciationInstruction
protected class InstanceLevelInstruction_InstanciationInstructionParserRuleCall_0 extends RuleCallToken {
	
	public InstanceLevelInstruction_InstanciationInstructionParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getInstanceLevelInstructionAccess().getInstanciationInstructionParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInstanciationInstructionRule().getType().getClassifier())
			return null;
		if(checkForRecursion(InstanciationInstruction_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// StructuralFeatureAffectation
protected class InstanceLevelInstruction_StructuralFeatureAffectationParserRuleCall_1 extends RuleCallToken {
	
	public InstanceLevelInstruction_StructuralFeatureAffectationParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getInstanceLevelInstructionAccess().getStructuralFeatureAffectationParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier())
			return null;
		if(checkForRecursion(StructuralFeatureAffectation_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule InstanceLevelInstruction ****************/


/************ begin Rule ValueForStructuralFeature ****************
 *
 * ValueForStructuralFeature returns modelingUnit::ValueForStructuralFeature:
 * 	NativeValueForStructuralFeature | ReferenceValueForStructuralFeature | NewObjectValueForStructuralFeature;
 *
 **/

// NativeValueForStructuralFeature | ReferenceValueForStructuralFeature | NewObjectValueForStructuralFeature
protected class ValueForStructuralFeature_Alternatives extends AlternativesToken {

	public ValueForStructuralFeature_Alternatives(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getValueForStructuralFeatureAccess().getAlternatives();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ValueForStructuralFeature_NativeValueForStructuralFeatureParserRuleCall_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ValueForStructuralFeature_ReferenceValueForStructuralFeatureParserRuleCall_1(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ValueForStructuralFeature_NewObjectValueForStructuralFeatureParserRuleCall_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNativeValueForStructuralFeatureRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getNewObjectValueForStructuralFeatureRule().getType().getClassifier() && 
		   getEObject().eClass() != grammarAccess.getReferenceValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// NativeValueForStructuralFeature
protected class ValueForStructuralFeature_NativeValueForStructuralFeatureParserRuleCall_0 extends RuleCallToken {
	
	public ValueForStructuralFeature_NativeValueForStructuralFeatureParserRuleCall_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueForStructuralFeatureAccess().getNativeValueForStructuralFeatureParserRuleCall_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NativeValueForStructuralFeature_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNativeValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NativeValueForStructuralFeature_Group.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// ReferenceValueForStructuralFeature
protected class ValueForStructuralFeature_ReferenceValueForStructuralFeatureParserRuleCall_1 extends RuleCallToken {
	
	public ValueForStructuralFeature_ReferenceValueForStructuralFeatureParserRuleCall_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueForStructuralFeatureAccess().getReferenceValueForStructuralFeatureParserRuleCall_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ReferenceValueForStructuralFeature_ReferencedElementAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		if(checkForRecursion(ReferenceValueForStructuralFeature_ReferencedElementAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}

// NewObjectValueForStructuralFeature
protected class ValueForStructuralFeature_NewObjectValueForStructuralFeatureParserRuleCall_2 extends RuleCallToken {
	
	public ValueForStructuralFeature_NewObjectValueForStructuralFeatureParserRuleCall_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public RuleCall getGrammarElement() {
		return grammarAccess.getValueForStructuralFeatureAccess().getNewObjectValueForStructuralFeatureParserRuleCall_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NewObjectValueForStructuralFeature_ValueAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNewObjectValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		if(checkForRecursion(NewObjectValueForStructuralFeature_ValueAssignment.class, eObjectConsumer)) return null;
		return eObjectConsumer;
	}
	
    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, inst);
		}	
	}	
}


/************ end Rule ValueForStructuralFeature ****************/


/************ begin Rule ModelingUnitInstructionReference_Impl ****************
 *
 * ModelingUnitInstructionReference_Impl returns modelingUnit::ModelingUnitInstructionReference:
 * 	IntentHref=StringWithoutQuotes;
 *
 **/

// IntentHref=StringWithoutQuotes
protected class ModelingUnitInstructionReference_Impl_IntentHrefAssignment extends AssignmentToken  {
	
	public ModelingUnitInstructionReference_Impl_IntentHrefAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getModelingUnitInstructionReference_ImplAccess().getIntentHrefAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getModelingUnitInstructionReference_ImplRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getModelingUnitInstructionReference_ImplAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getModelingUnitInstructionReference_ImplAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_0();
			return obj;
		}
		return null;
	}

}

/************ end Rule ModelingUnitInstructionReference_Impl ****************/


/************ begin Rule SectionReferenceinModelingUnit ****************
 *
 * SectionReferenceinModelingUnit returns modelingUnit::IntentSectionReferenceinModelingUnit:
 * 	"@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?;
 *
 **/

// "@see" referencedObject=SectionOrParagraphReference textToPrint=EString? lineBreak?=LINE_BREAK?
protected class SectionReferenceinModelingUnit_Group extends GroupToken {
	
	public SectionReferenceinModelingUnit_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getSectionReferenceinModelingUnitAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceinModelingUnit_LineBreakAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SectionReferenceinModelingUnit_TextToPrintAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new SectionReferenceinModelingUnit_ReferencedObjectAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getSectionReferenceinModelingUnitRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "@see"
protected class SectionReferenceinModelingUnit_SeeKeyword_0 extends KeywordToken  {
	
	public SectionReferenceinModelingUnit_SeeKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getSectionReferenceinModelingUnitAccess().getSeeKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// referencedObject=SectionOrParagraphReference
protected class SectionReferenceinModelingUnit_ReferencedObjectAssignment_1 extends AssignmentToken  {
	
	public SectionReferenceinModelingUnit_ReferencedObjectAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceinModelingUnitAccess().getReferencedObjectAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionOrParagraphReference_IntentHrefAssignment(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referencedObject",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referencedObject");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getSectionOrParagraphReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getSectionReferenceinModelingUnitAccess().getReferencedObjectSectionOrParagraphReferenceParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new SectionReferenceinModelingUnit_SeeKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// textToPrint=EString?
protected class SectionReferenceinModelingUnit_TextToPrintAssignment_2 extends AssignmentToken  {
	
	public SectionReferenceinModelingUnit_TextToPrintAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceinModelingUnitAccess().getTextToPrintAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceinModelingUnit_ReferencedObjectAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textToPrint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textToPrint");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSectionReferenceinModelingUnitAccess().getTextToPrintEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getSectionReferenceinModelingUnitAccess().getTextToPrintEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// lineBreak?=LINE_BREAK?
protected class SectionReferenceinModelingUnit_LineBreakAssignment_3 extends AssignmentToken  {
	
	public SectionReferenceinModelingUnit_LineBreakAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getSectionReferenceinModelingUnitAccess().getLineBreakAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new SectionReferenceinModelingUnit_TextToPrintAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new SectionReferenceinModelingUnit_ReferencedObjectAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getSectionReferenceinModelingUnitAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getSectionReferenceinModelingUnitAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule SectionReferenceinModelingUnit ****************/


/************ begin Rule LabelinModelingUnit ****************
 *
 * LabelinModelingUnit returns modelingUnit::LabelinModelingUnit:
 * 	type=TypeLabel labelValue=EString textToPrint=EString? lineBreak?=LINE_BREAK?;
 *
 **/

// type=TypeLabel labelValue=EString textToPrint=EString? lineBreak?=LINE_BREAK?
protected class LabelinModelingUnit_Group extends GroupToken {
	
	public LabelinModelingUnit_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getLabelinModelingUnitAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelinModelingUnit_LineBreakAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LabelinModelingUnit_TextToPrintAssignment_2(lastRuleCallOrigin, this, 1, inst);
			case 2: return new LabelinModelingUnit_LabelValueAssignment_1(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getLabelinModelingUnitRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// type=TypeLabel
protected class LabelinModelingUnit_TypeAssignment_0 extends AssignmentToken  {
	
	public LabelinModelingUnit_TypeAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelinModelingUnitAccess().getTypeAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("type",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("type");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getLabelinModelingUnitAccess().getTypeTypeLabelEnumRuleCall_0_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getLabelinModelingUnitAccess().getTypeTypeLabelEnumRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// labelValue=EString
protected class LabelinModelingUnit_LabelValueAssignment_1 extends AssignmentToken  {
	
	public LabelinModelingUnit_LabelValueAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelinModelingUnitAccess().getLabelValueAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelinModelingUnit_TypeAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("labelValue",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("labelValue");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLabelinModelingUnitAccess().getLabelValueEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLabelinModelingUnitAccess().getLabelValueEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// textToPrint=EString?
protected class LabelinModelingUnit_TextToPrintAssignment_2 extends AssignmentToken  {
	
	public LabelinModelingUnit_TextToPrintAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelinModelingUnitAccess().getTextToPrintAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelinModelingUnit_LabelValueAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("textToPrint",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("textToPrint");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLabelinModelingUnitAccess().getTextToPrintEStringParserRuleCall_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getLabelinModelingUnitAccess().getTextToPrintEStringParserRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// lineBreak?=LINE_BREAK?
protected class LabelinModelingUnit_LineBreakAssignment_3 extends AssignmentToken  {
	
	public LabelinModelingUnit_LineBreakAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getLabelinModelingUnitAccess().getLineBreakAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new LabelinModelingUnit_TextToPrintAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new LabelinModelingUnit_LabelValueAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getLabelinModelingUnitAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getLabelinModelingUnitAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule LabelinModelingUnit ****************/


/************ begin Rule AnnotationDeclaration ****************
 *
 * AnnotationDeclaration returns modelingUnit::AnnotationDeclaration:
 * 	"@Annotation" annotationID=StringWithoutQuotes map+=KeyValForAnnotation ("," map+=KeyValForAnnotation)*
 * 	lineBreak?=LINE_BREAK?;
 *
 **/

// "@Annotation" annotationID=StringWithoutQuotes map+=KeyValForAnnotation ("," map+=KeyValForAnnotation)*
// lineBreak?=LINE_BREAK?
protected class AnnotationDeclaration_Group extends GroupToken {
	
	public AnnotationDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnotationDeclaration_LineBreakAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AnnotationDeclaration_Group_3(lastRuleCallOrigin, this, 1, inst);
			case 2: return new AnnotationDeclaration_MapAssignment_2(lastRuleCallOrigin, this, 2, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getAnnotationDeclarationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "@Annotation"
protected class AnnotationDeclaration_AnnotationKeyword_0 extends KeywordToken  {
	
	public AnnotationDeclaration_AnnotationKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getAnnotationKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// annotationID=StringWithoutQuotes
protected class AnnotationDeclaration_AnnotationIDAssignment_1 extends AssignmentToken  {
	
	public AnnotationDeclaration_AnnotationIDAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getAnnotationIDAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnotationDeclaration_AnnotationKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("annotationID",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("annotationID");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAnnotationDeclarationAccess().getAnnotationIDStringWithoutQuotesTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAnnotationDeclarationAccess().getAnnotationIDStringWithoutQuotesTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// map+=KeyValForAnnotation
protected class AnnotationDeclaration_MapAssignment_2 extends AssignmentToken  {
	
	public AnnotationDeclaration_MapAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getMapAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new KeyValForAnnotation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("map",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("map");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getKeyValForAnnotationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAnnotationDeclarationAccess().getMapKeyValForAnnotationParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AnnotationDeclaration_AnnotationIDAssignment_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," map+=KeyValForAnnotation)*
protected class AnnotationDeclaration_Group_3 extends GroupToken {
	
	public AnnotationDeclaration_Group_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getGroup_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnotationDeclaration_MapAssignment_3_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class AnnotationDeclaration_CommaKeyword_3_0 extends KeywordToken  {
	
	public AnnotationDeclaration_CommaKeyword_3_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getCommaKeyword_3_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnotationDeclaration_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AnnotationDeclaration_MapAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// map+=KeyValForAnnotation
protected class AnnotationDeclaration_MapAssignment_3_1 extends AssignmentToken  {
	
	public AnnotationDeclaration_MapAssignment_3_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getMapAssignment_3_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new KeyValForAnnotation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("map",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("map");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getKeyValForAnnotationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getAnnotationDeclarationAccess().getMapKeyValForAnnotationParserRuleCall_3_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new AnnotationDeclaration_CommaKeyword_3_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// lineBreak?=LINE_BREAK?
protected class AnnotationDeclaration_LineBreakAssignment_4 extends AssignmentToken  {
	
	public AnnotationDeclaration_LineBreakAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getAnnotationDeclarationAccess().getLineBreakAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new AnnotationDeclaration_Group_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new AnnotationDeclaration_MapAssignment_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getAnnotationDeclarationAccess().getLineBreakLINE_BREAKTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getAnnotationDeclarationAccess().getLineBreakLINE_BREAKTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule AnnotationDeclaration ****************/


/************ begin Rule InstanciationInstruction ****************
 *
 * InstanciationInstruction returns modelingUnit::InstanciationInstruction:
 * 	"new" metaType=TypeReference name=StringWithoutQuotes? "{" structuralFeatures+=StructuralFeatureAffectation* "}"
 * 	lineBreak?=LINE_BREAK?;
 *
 **/

// "new" metaType=TypeReference name=StringWithoutQuotes? "{" structuralFeatures+=StructuralFeatureAffectation* "}"
// lineBreak?=LINE_BREAK?
protected class InstanciationInstruction_Group extends GroupToken {
	
	public InstanciationInstruction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_LineBreakAssignment_6(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InstanciationInstruction_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInstanciationInstructionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "new"
protected class InstanciationInstruction_NewKeyword_0 extends KeywordToken  {
	
	public InstanciationInstruction_NewKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getNewKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// metaType=TypeReference
protected class InstanciationInstruction_MetaTypeAssignment_1 extends AssignmentToken  {
	
	public InstanciationInstruction_MetaTypeAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getMetaTypeAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("metaType",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("metaType");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getTypeReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getInstanciationInstructionAccess().getMetaTypeTypeReferenceParserRuleCall_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new InstanciationInstruction_NewKeyword_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// name=StringWithoutQuotes?
protected class InstanciationInstruction_NameAssignment_2 extends AssignmentToken  {
	
	public InstanciationInstruction_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_MetaTypeAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInstanciationInstructionAccess().getNameStringWithoutQuotesTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInstanciationInstructionAccess().getNameStringWithoutQuotesTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class InstanciationInstruction_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public InstanciationInstruction_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InstanciationInstruction_MetaTypeAssignment_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// structuralFeatures+=StructuralFeatureAffectation*
protected class InstanciationInstruction_StructuralFeaturesAssignment_4 extends AssignmentToken  {
	
	public InstanciationInstruction_StructuralFeaturesAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getStructuralFeaturesAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("structuralFeatures",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("structuralFeatures");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getInstanciationInstructionAccess().getStructuralFeaturesStructuralFeatureAffectationParserRuleCall_4_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new InstanciationInstruction_StructuralFeaturesAssignment_4(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new InstanciationInstruction_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class InstanciationInstruction_RightCurlyBracketKeyword_5 extends KeywordToken  {
	
	public InstanciationInstruction_RightCurlyBracketKeyword_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getRightCurlyBracketKeyword_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_StructuralFeaturesAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new InstanciationInstruction_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lineBreak?=LINE_BREAK?
protected class InstanciationInstruction_LineBreakAssignment_6 extends AssignmentToken  {
	
	public InstanciationInstruction_LineBreakAssignment_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInstanciationInstructionAccess().getLineBreakAssignment_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_RightCurlyBracketKeyword_5(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInstanciationInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_6_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInstanciationInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_6_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule InstanciationInstruction ****************/


/************ begin Rule StructuralFeatureAffectation ****************
 *
 * StructuralFeatureAffectation returns modelingUnit::StructuralFeatureAffectation: //metaType=TypeReference
 * 	name=StringWithoutQuotes (usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "["
 * 	values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]")) ";" lineBreak?=LINE_BREAK?;
 *
 **/

// //metaType=TypeReference
// name=StringWithoutQuotes (usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "["
// values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]")) ";" lineBreak?=LINE_BREAK?
protected class StructuralFeatureAffectation_Group extends GroupToken {
	
	public StructuralFeatureAffectation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_LineBreakAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StructuralFeatureAffectation_SemicolonKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getStructuralFeatureAffectationRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// //metaType=TypeReference
// name=StringWithoutQuotes
protected class StructuralFeatureAffectation_NameAssignment_0 extends AssignmentToken  {
	
	public StructuralFeatureAffectation_NameAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getNameAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStructuralFeatureAffectationAccess().getNameStringWithoutQuotesTerminalRuleCall_0_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStructuralFeatureAffectationAccess().getNameStringWithoutQuotesTerminalRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// usedOperator=AffectationOperator (values+=ValueForStructuralFeature | "[" values+=ValueForStructuralFeature (","
// values+=ValueForStructuralFeature)* "]")
protected class StructuralFeatureAffectation_Group_1 extends GroupToken {
	
	public StructuralFeatureAffectation_Group_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getGroup_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_Alternatives_1_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// usedOperator=AffectationOperator
protected class StructuralFeatureAffectation_UsedOperatorAssignment_1_0 extends AssignmentToken  {
	
	public StructuralFeatureAffectation_UsedOperatorAssignment_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getUsedOperatorAssignment_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_NameAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("usedOperator",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("usedOperator");
		if(enumLitSerializer.isValid(obj.getEObject(), grammarAccess.getStructuralFeatureAffectationAccess().getUsedOperatorAffectationOperatorEnumRuleCall_1_0_0(), value, null)) { 
			type = AssignmentType.ENUM_RULE_CALL;
			element = grammarAccess.getStructuralFeatureAffectationAccess().getUsedOperatorAffectationOperatorEnumRuleCall_1_0_0();
			return obj;
		}
		return null;
	}

}

// values+=ValueForStructuralFeature | "[" values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]"
protected class StructuralFeatureAffectation_Alternatives_1_1 extends AlternativesToken {

	public StructuralFeatureAffectation_Alternatives_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Alternatives getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getAlternatives_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_ValuesAssignment_1_1_0(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StructuralFeatureAffectation_Group_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// values+=ValueForStructuralFeature
protected class StructuralFeatureAffectation_ValuesAssignment_1_1_0 extends AssignmentToken  {
	
	public StructuralFeatureAffectation_ValuesAssignment_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getValuesAssignment_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ValueForStructuralFeature_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getValueForStructuralFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStructuralFeatureAffectationAccess().getValuesValueForStructuralFeatureParserRuleCall_1_1_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StructuralFeatureAffectation_UsedOperatorAssignment_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "[" values+=ValueForStructuralFeature ("," values+=ValueForStructuralFeature)* "]"
protected class StructuralFeatureAffectation_Group_1_1_1 extends GroupToken {
	
	public StructuralFeatureAffectation_Group_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getGroup_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_RightSquareBracketKeyword_1_1_1_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "["
protected class StructuralFeatureAffectation_LeftSquareBracketKeyword_1_1_1_0 extends KeywordToken  {
	
	public StructuralFeatureAffectation_LeftSquareBracketKeyword_1_1_1_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getLeftSquareBracketKeyword_1_1_1_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_UsedOperatorAssignment_1_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// values+=ValueForStructuralFeature
protected class StructuralFeatureAffectation_ValuesAssignment_1_1_1_1 extends AssignmentToken  {
	
	public StructuralFeatureAffectation_ValuesAssignment_1_1_1_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getValuesAssignment_1_1_1_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ValueForStructuralFeature_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getValueForStructuralFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStructuralFeatureAffectationAccess().getValuesValueForStructuralFeatureParserRuleCall_1_1_1_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StructuralFeatureAffectation_LeftSquareBracketKeyword_1_1_1_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ("," values+=ValueForStructuralFeature)*
protected class StructuralFeatureAffectation_Group_1_1_1_2 extends GroupToken {
	
	public StructuralFeatureAffectation_Group_1_1_1_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getGroup_1_1_1_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_ValuesAssignment_1_1_1_2_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// ","
protected class StructuralFeatureAffectation_CommaKeyword_1_1_1_2_0 extends KeywordToken  {
	
	public StructuralFeatureAffectation_CommaKeyword_1_1_1_2_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getCommaKeyword_1_1_1_2_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_Group_1_1_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StructuralFeatureAffectation_ValuesAssignment_1_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// values+=ValueForStructuralFeature
protected class StructuralFeatureAffectation_ValuesAssignment_1_1_1_2_1 extends AssignmentToken  {
	
	public StructuralFeatureAffectation_ValuesAssignment_1_1_1_2_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getValuesAssignment_1_1_1_2_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ValueForStructuralFeature_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("values",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("values");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getValueForStructuralFeatureRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getStructuralFeatureAffectationAccess().getValuesValueForStructuralFeatureParserRuleCall_1_1_1_2_1_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new StructuralFeatureAffectation_CommaKeyword_1_1_1_2_0(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}


// "]"
protected class StructuralFeatureAffectation_RightSquareBracketKeyword_1_1_1_3 extends KeywordToken  {
	
	public StructuralFeatureAffectation_RightSquareBracketKeyword_1_1_1_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getRightSquareBracketKeyword_1_1_1_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_Group_1_1_1_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new StructuralFeatureAffectation_ValuesAssignment_1_1_1_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}




// ";"
protected class StructuralFeatureAffectation_SemicolonKeyword_2 extends KeywordToken  {
	
	public StructuralFeatureAffectation_SemicolonKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getSemicolonKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_Group_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lineBreak?=LINE_BREAK?
protected class StructuralFeatureAffectation_LineBreakAssignment_3 extends AssignmentToken  {
	
	public StructuralFeatureAffectation_LineBreakAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getStructuralFeatureAffectationAccess().getLineBreakAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new StructuralFeatureAffectation_SemicolonKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getStructuralFeatureAffectationAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getStructuralFeatureAffectationAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule StructuralFeatureAffectation ****************/


/************ begin Rule NativeValueForStructuralFeature ****************
 *
 * NativeValueForStructuralFeature returns modelingUnit::NativeValueForStructuralFeature:
 * 	value=StringWithQuotes lineBreak?=LINE_BREAK?;
 *
 **/

// value=StringWithQuotes lineBreak?=LINE_BREAK?
protected class NativeValueForStructuralFeature_Group extends GroupToken {
	
	public NativeValueForStructuralFeature_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getNativeValueForStructuralFeatureAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NativeValueForStructuralFeature_LineBreakAssignment_1(lastRuleCallOrigin, this, 0, inst);
			case 1: return new NativeValueForStructuralFeature_ValueAssignment_0(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNativeValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// value=StringWithQuotes
protected class NativeValueForStructuralFeature_ValueAssignment_0 extends AssignmentToken  {
	
	public NativeValueForStructuralFeature_ValueAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNativeValueForStructuralFeatureAccess().getValueAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNativeValueForStructuralFeatureAccess().getValueStringWithQuotesParserRuleCall_0_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getNativeValueForStructuralFeatureAccess().getValueStringWithQuotesParserRuleCall_0_0();
			return obj;
		}
		return null;
	}

}

// lineBreak?=LINE_BREAK?
protected class NativeValueForStructuralFeature_LineBreakAssignment_1 extends AssignmentToken  {
	
	public NativeValueForStructuralFeature_LineBreakAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNativeValueForStructuralFeatureAccess().getLineBreakAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new NativeValueForStructuralFeature_ValueAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getNativeValueForStructuralFeatureAccess().getLineBreakLINE_BREAKTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getNativeValueForStructuralFeatureAccess().getLineBreakLINE_BREAKTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule NativeValueForStructuralFeature ****************/


/************ begin Rule NewObjectValueForStructuralFeature ****************
 *
 * NewObjectValueForStructuralFeature returns modelingUnit::NewObjectValueForStructuralFeature:
 * 	value=InstanciationInstruction;
 *
 **/

// value=InstanciationInstruction
protected class NewObjectValueForStructuralFeature_ValueAssignment extends AssignmentToken  {
	
	public NewObjectValueForStructuralFeature_ValueAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getNewObjectValueForStructuralFeatureAccess().getValueAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstruction_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getNewObjectValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInstanciationInstructionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getNewObjectValueForStructuralFeatureAccess().getValueInstanciationInstructionParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

/************ end Rule NewObjectValueForStructuralFeature ****************/


/************ begin Rule ReferenceValueForStructuralFeature ****************
 *
 * ReferenceValueForStructuralFeature returns modelingUnit::ReferenceValueForStructuralFeature:
 * 	referencedElement=InstanciationInstructionReference;
 *
 **/

// referencedElement=InstanciationInstructionReference
protected class ReferenceValueForStructuralFeature_ReferencedElementAssignment extends AssignmentToken  {
	
	public ReferenceValueForStructuralFeature_ReferencedElementAssignment(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getReferenceValueForStructuralFeatureAccess().getReferencedElementAssignment();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstructionReference_Group(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getReferenceValueForStructuralFeatureRule().getType().getClassifier())
			return null;
		if((value = eObjectConsumer.getConsumable("referencedElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referencedElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getInstanciationInstructionReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getReferenceValueForStructuralFeatureAccess().getReferencedElementInstanciationInstructionReferenceParserRuleCall_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

/************ end Rule ReferenceValueForStructuralFeature ****************/


/************ begin Rule ContributionInstruction ****************
 *
 * ContributionInstruction returns modelingUnit::ContributionInstruction:
 * 	referencedElement=ModelingUnitInstructionReference "{" contributions+=ModelingUnitInstruction* "}"
 * 	lineBreak?=LINE_BREAK?;
 *
 **/

// referencedElement=ModelingUnitInstructionReference "{" contributions+=ModelingUnitInstruction* "}"
// lineBreak?=LINE_BREAK?
protected class ContributionInstruction_Group extends GroupToken {
	
	public ContributionInstruction_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getContributionInstructionAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContributionInstruction_LineBreakAssignment_4(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ContributionInstruction_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getContributionInstructionRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// referencedElement=ModelingUnitInstructionReference
protected class ContributionInstruction_ReferencedElementAssignment_0 extends AssignmentToken  {
	
	public ContributionInstruction_ReferencedElementAssignment_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContributionInstructionAccess().getReferencedElementAssignment_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnitInstructionReference_ModelingUnitInstructionReference_ImplParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("referencedElement",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("referencedElement");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelingUnitInstructionReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContributionInstructionAccess().getReferencedElementModelingUnitInstructionReferenceParserRuleCall_0_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(next, actIndex , index, consumed);
		}	
	}	
}

// "{"
protected class ContributionInstruction_LeftCurlyBracketKeyword_1 extends KeywordToken  {
	
	public ContributionInstruction_LeftCurlyBracketKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContributionInstructionAccess().getLeftCurlyBracketKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContributionInstruction_ReferencedElementAssignment_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// contributions+=ModelingUnitInstruction*
protected class ContributionInstruction_ContributionsAssignment_2 extends AssignmentToken  {
	
	public ContributionInstruction_ContributionsAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContributionInstructionAccess().getContributionsAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnitInstruction_Alternatives(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("contributions",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("contributions");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelingUnitInstructionRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getContributionInstructionAccess().getContributionsModelingUnitInstructionParserRuleCall_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ContributionInstruction_ContributionsAssignment_2(lastRuleCallOrigin, next, actIndex, consumed);
			case 1: return new ContributionInstruction_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// "}"
protected class ContributionInstruction_RightCurlyBracketKeyword_3 extends KeywordToken  {
	
	public ContributionInstruction_RightCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getContributionInstructionAccess().getRightCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContributionInstruction_ContributionsAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ContributionInstruction_LeftCurlyBracketKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// lineBreak?=LINE_BREAK?
protected class ContributionInstruction_LineBreakAssignment_4 extends AssignmentToken  {
	
	public ContributionInstruction_LineBreakAssignment_4(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getContributionInstructionAccess().getLineBreakAssignment_4();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ContributionInstruction_RightCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getContributionInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_4_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getContributionInstructionAccess().getLineBreakLINE_BREAKTerminalRuleCall_4_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ContributionInstruction ****************/


/************ begin Rule TypeReference ****************
 *
 * TypeReference returns modelingUnit::TypeReference:
 * 	{modelingUnit::TypeReference} IntentHref=StringWithoutQuotes;
 *
 **/

// {modelingUnit::TypeReference} IntentHref=StringWithoutQuotes
protected class TypeReference_Group extends GroupToken {
	
	public TypeReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getTypeReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeReference_IntentHrefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {modelingUnit::TypeReference}
protected class TypeReference_TypeReferenceAction_0 extends ActionToken  {

	public TypeReference_TypeReferenceAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getTypeReferenceAccess().getTypeReferenceAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// IntentHref=StringWithoutQuotes
protected class TypeReference_IntentHrefAssignment_1 extends AssignmentToken  {
	
	public TypeReference_IntentHrefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getTypeReferenceAccess().getIntentHrefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new TypeReference_TypeReferenceAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getTypeReferenceAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getTypeReferenceAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule TypeReference ****************/


/************ begin Rule InstanciationInstructionReference ****************
 *
 * InstanciationInstructionReference returns modelingUnit::InstanciationInstructionReference:
 * 	{modelingUnit::InstanciationInstructionReference} IntentHref=StringWithoutQuotes;
 *
 **/

// {modelingUnit::InstanciationInstructionReference} IntentHref=StringWithoutQuotes
protected class InstanciationInstructionReference_Group extends GroupToken {
	
	public InstanciationInstructionReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getInstanciationInstructionReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstructionReference_IntentHrefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getInstanciationInstructionReferenceAccess().getInstanciationInstructionReferenceAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {modelingUnit::InstanciationInstructionReference}
protected class InstanciationInstructionReference_InstanciationInstructionReferenceAction_0 extends ActionToken  {

	public InstanciationInstructionReference_InstanciationInstructionReferenceAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getInstanciationInstructionReferenceAccess().getInstanciationInstructionReferenceAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// IntentHref=StringWithoutQuotes
protected class InstanciationInstructionReference_IntentHrefAssignment_1 extends AssignmentToken  {
	
	public InstanciationInstructionReference_IntentHrefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getInstanciationInstructionReferenceAccess().getIntentHrefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new InstanciationInstructionReference_InstanciationInstructionReferenceAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getInstanciationInstructionReferenceAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getInstanciationInstructionReferenceAccess().getIntentHrefStringWithoutQuotesTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule InstanciationInstructionReference ****************/


/************ begin Rule KeyValForAnnotation ****************
 *
 * KeyValForAnnotation returns modelingUnit::KeyValForAnnotation:
 * 	{modelingUnit::KeyValForAnnotation} key=StringWithoutQuotes "=" value=EString;
 *
 **/

// {modelingUnit::KeyValForAnnotation} key=StringWithoutQuotes "=" value=EString
protected class KeyValForAnnotation_Group extends GroupToken {
	
	public KeyValForAnnotation_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getKeyValForAnnotationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new KeyValForAnnotation_ValueAssignment_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getKeyValForAnnotationAccess().getKeyValForAnnotationAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {modelingUnit::KeyValForAnnotation}
protected class KeyValForAnnotation_KeyValForAnnotationAction_0 extends ActionToken  {

	public KeyValForAnnotation_KeyValForAnnotationAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getKeyValForAnnotationAccess().getKeyValForAnnotationAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// key=StringWithoutQuotes
protected class KeyValForAnnotation_KeyAssignment_1 extends AssignmentToken  {
	
	public KeyValForAnnotation_KeyAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getKeyValForAnnotationAccess().getKeyAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new KeyValForAnnotation_KeyValForAnnotationAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("key",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("key");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getKeyValForAnnotationAccess().getKeyStringWithoutQuotesTerminalRuleCall_1_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getKeyValForAnnotationAccess().getKeyStringWithoutQuotesTerminalRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "="
protected class KeyValForAnnotation_EqualsSignKeyword_2 extends KeywordToken  {
	
	public KeyValForAnnotation_EqualsSignKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getKeyValForAnnotationAccess().getEqualsSignKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new KeyValForAnnotation_KeyAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// value=EString
protected class KeyValForAnnotation_ValueAssignment_3 extends AssignmentToken  {
	
	public KeyValForAnnotation_ValueAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getKeyValForAnnotationAccess().getValueAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new KeyValForAnnotation_EqualsSignKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("value",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("value");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getKeyValForAnnotationAccess().getValueEStringParserRuleCall_3_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getKeyValForAnnotationAccess().getValueEStringParserRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule KeyValForAnnotation ****************/


/************ begin Rule ResourceReference ****************
 *
 * ResourceReference returns modelingUnit::ResourceReference:
 * 	"[" IntentHref=EString "]" lineBreak?=LINE_BREAK?;
 *
 **/

// "[" IntentHref=EString "]" lineBreak?=LINE_BREAK?
protected class ResourceReference_Group extends GroupToken {
	
	public ResourceReference_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getResourceReferenceAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceReference_LineBreakAssignment_3(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ResourceReference_RightSquareBracketKeyword_2(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getResourceReferenceRule().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// "["
protected class ResourceReference_LeftSquareBracketKeyword_0 extends KeywordToken  {
	
	public ResourceReference_LeftSquareBracketKeyword_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceReferenceAccess().getLeftSquareBracketKeyword_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

}

// IntentHref=EString
protected class ResourceReference_IntentHrefAssignment_1 extends AssignmentToken  {
	
	public ResourceReference_IntentHrefAssignment_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceReferenceAccess().getIntentHrefAssignment_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceReference_LeftSquareBracketKeyword_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("IntentHref",true)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("IntentHref");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResourceReferenceAccess().getIntentHrefEStringParserRuleCall_1_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getResourceReferenceAccess().getIntentHrefEStringParserRuleCall_1_0();
			return obj;
		}
		return null;
	}

}

// "]"
protected class ResourceReference_RightSquareBracketKeyword_2 extends KeywordToken  {
	
	public ResourceReference_RightSquareBracketKeyword_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceReferenceAccess().getRightSquareBracketKeyword_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceReference_IntentHrefAssignment_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// lineBreak?=LINE_BREAK?
protected class ResourceReference_LineBreakAssignment_3 extends AssignmentToken  {
	
	public ResourceReference_LineBreakAssignment_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceReferenceAccess().getLineBreakAssignment_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceReference_RightSquareBracketKeyword_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResourceReferenceAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getResourceReferenceAccess().getLineBreakLINE_BREAKTerminalRuleCall_3_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ResourceReference ****************/


/************ begin Rule ResourceDeclaration ****************
 *
 * / * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * / ResourceDeclaration returns
 * modelingUnit::ResourceDeclaration:
 * 	{modelingUnit::ResourceDeclaration} "Resource" name=StringWithoutQuotes? "{" LINE_BREAK? ("URI" "=" uri=URI ";"
 * 	LINE_BREAK?)? ("contentType" "=" contentType=EString ";" LINE_BREAK?)? ("content" "+="
 * 	content+=ModelingUnitInstructionReference ";" LINE_BREAK?)* "}" lineBreak?=LINE_BREAK?;
 *
 **/

// {modelingUnit::ResourceDeclaration} "Resource" name=StringWithoutQuotes? "{" LINE_BREAK? ("URI" "=" uri=URI ";"
// LINE_BREAK?)? ("contentType" "=" contentType=EString ";" LINE_BREAK?)? ("content" "+="
// content+=ModelingUnitInstructionReference ";" LINE_BREAK?)* "}" lineBreak?=LINE_BREAK?
// / * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * /
protected class ResourceDeclaration_Group extends GroupToken {
	
	public ResourceDeclaration_Group(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getGroup();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_LineBreakAssignment_9(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ResourceDeclaration_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(getEObject().eClass() != grammarAccess.getResourceDeclarationAccess().getResourceDeclarationAction_0().getType().getClassifier())
			return null;
		return eObjectConsumer;
	}

}

// {modelingUnit::ResourceDeclaration}
protected class ResourceDeclaration_ResourceDeclarationAction_0 extends ActionToken  {

	public ResourceDeclaration_ResourceDeclarationAction_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Action getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getResourceDeclarationAction_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			default: return lastRuleCallOrigin.createFollowerAfterReturn(this, index, index, inst);
		}	
	}

    @Override
	public IEObjectConsumer tryConsume() {
		if(!eObjectConsumer.isConsumed()) return null;
		return eObjectConsumer;
	}
}

// "Resource"
protected class ResourceDeclaration_ResourceKeyword_1 extends KeywordToken  {
	
	public ResourceDeclaration_ResourceKeyword_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getResourceKeyword_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_ResourceDeclarationAction_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// name=StringWithoutQuotes?
protected class ResourceDeclaration_NameAssignment_2 extends AssignmentToken  {
	
	public ResourceDeclaration_NameAssignment_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getNameAssignment_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_ResourceKeyword_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("name",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("name");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResourceDeclarationAccess().getNameStringWithoutQuotesTerminalRuleCall_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getResourceDeclarationAccess().getNameStringWithoutQuotesTerminalRuleCall_2_0();
			return obj;
		}
		return null;
	}

}

// "{"
protected class ResourceDeclaration_LeftCurlyBracketKeyword_3 extends KeywordToken  {
	
	public ResourceDeclaration_LeftCurlyBracketKeyword_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getLeftCurlyBracketKeyword_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_NameAssignment_2(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ResourceDeclaration_ResourceKeyword_1(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// ("URI" "=" uri=URI ";" LINE_BREAK?)?
protected class ResourceDeclaration_Group_5 extends GroupToken {
	
	public ResourceDeclaration_Group_5(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getGroup_5();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_SemicolonKeyword_5_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "URI"
protected class ResourceDeclaration_URIKeyword_5_0 extends KeywordToken  {
	
	public ResourceDeclaration_URIKeyword_5_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getURIKeyword_5_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "="
protected class ResourceDeclaration_EqualsSignKeyword_5_1 extends KeywordToken  {
	
	public ResourceDeclaration_EqualsSignKeyword_5_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getEqualsSignKeyword_5_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_URIKeyword_5_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// uri=URI
protected class ResourceDeclaration_UriAssignment_5_2 extends AssignmentToken  {
	
	public ResourceDeclaration_UriAssignment_5_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getUriAssignment_5_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_EqualsSignKeyword_5_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("uri",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("uri");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResourceDeclarationAccess().getUriURITerminalRuleCall_5_2_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getResourceDeclarationAccess().getUriURITerminalRuleCall_5_2_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ResourceDeclaration_SemicolonKeyword_5_3 extends KeywordToken  {
	
	public ResourceDeclaration_SemicolonKeyword_5_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_5_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_UriAssignment_5_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ("contentType" "=" contentType=EString ";" LINE_BREAK?)?
protected class ResourceDeclaration_Group_6 extends GroupToken {
	
	public ResourceDeclaration_Group_6(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getGroup_6();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_SemicolonKeyword_6_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "contentType"
protected class ResourceDeclaration_ContentTypeKeyword_6_0 extends KeywordToken  {
	
	public ResourceDeclaration_ContentTypeKeyword_6_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getContentTypeKeyword_6_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_Group_5(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ResourceDeclaration_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 1, inst);
			default: return null;
		}	
	}

}

// "="
protected class ResourceDeclaration_EqualsSignKeyword_6_1 extends KeywordToken  {
	
	public ResourceDeclaration_EqualsSignKeyword_6_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getEqualsSignKeyword_6_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_ContentTypeKeyword_6_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// contentType=EString
protected class ResourceDeclaration_ContentTypeAssignment_6_2 extends AssignmentToken  {
	
	public ResourceDeclaration_ContentTypeAssignment_6_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getContentTypeAssignment_6_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_EqualsSignKeyword_6_1(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("contentType",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("contentType");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResourceDeclarationAccess().getContentTypeEStringParserRuleCall_6_2_0(), value, null)) {
			type = AssignmentType.DATATYPE_RULE_CALL;
			element = grammarAccess.getResourceDeclarationAccess().getContentTypeEStringParserRuleCall_6_2_0();
			return obj;
		}
		return null;
	}

}

// ";"
protected class ResourceDeclaration_SemicolonKeyword_6_3 extends KeywordToken  {
	
	public ResourceDeclaration_SemicolonKeyword_6_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_6_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_ContentTypeAssignment_6_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// ("content" "+=" content+=ModelingUnitInstructionReference ";" LINE_BREAK?)*
protected class ResourceDeclaration_Group_7 extends GroupToken {
	
	public ResourceDeclaration_Group_7(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Group getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getGroup_7();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_SemicolonKeyword_7_3(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// "content"
protected class ResourceDeclaration_ContentKeyword_7_0 extends KeywordToken  {
	
	public ResourceDeclaration_ContentKeyword_7_0(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getContentKeyword_7_0();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ResourceDeclaration_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ResourceDeclaration_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ResourceDeclaration_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// "+="
protected class ResourceDeclaration_PlusSignEqualsSignKeyword_7_1 extends KeywordToken  {
	
	public ResourceDeclaration_PlusSignEqualsSignKeyword_7_1(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getPlusSignEqualsSignKeyword_7_1();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_ContentKeyword_7_0(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}

// content+=ModelingUnitInstructionReference
protected class ResourceDeclaration_ContentAssignment_7_2 extends AssignmentToken  {
	
	public ResourceDeclaration_ContentAssignment_7_2(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getContentAssignment_7_2();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ModelingUnitInstructionReference_ModelingUnitInstructionReference_ImplParserRuleCall(this, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("content",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("content");
		if(value instanceof EObject) { // org::eclipse::xtext::impl::RuleCallImpl
			IEObjectConsumer param = createEObjectConsumer((EObject)value);
			if(param.isInstanceOf(grammarAccess.getModelingUnitInstructionReferenceRule().getType().getClassifier())) {
				type = AssignmentType.PARSER_RULE_CALL;
				element = grammarAccess.getResourceDeclarationAccess().getContentModelingUnitInstructionReferenceParserRuleCall_7_2_0(); 
				consumed = obj;
				return param;
			}
		}
		return null;
	}

    @Override
	public AbstractToken createFollowerAfterReturn(AbstractToken next,	int actIndex, int index, IEObjectConsumer inst) {
		if(value == inst.getEObject() && !inst.isConsumed()) return null;
		switch(index) {
			case 0: return new ResourceDeclaration_PlusSignEqualsSignKeyword_7_1(lastRuleCallOrigin, next, actIndex, consumed);
			default: return null;
		}	
	}	
}

// ";"
protected class ResourceDeclaration_SemicolonKeyword_7_3 extends KeywordToken  {
	
	public ResourceDeclaration_SemicolonKeyword_7_3(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getSemicolonKeyword_7_3();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_ContentAssignment_7_2(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

}


// "}"
protected class ResourceDeclaration_RightCurlyBracketKeyword_8 extends KeywordToken  {
	
	public ResourceDeclaration_RightCurlyBracketKeyword_8(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Keyword getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getRightCurlyBracketKeyword_8();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_Group_7(lastRuleCallOrigin, this, 0, inst);
			case 1: return new ResourceDeclaration_Group_6(lastRuleCallOrigin, this, 1, inst);
			case 2: return new ResourceDeclaration_Group_5(lastRuleCallOrigin, this, 2, inst);
			case 3: return new ResourceDeclaration_LeftCurlyBracketKeyword_3(lastRuleCallOrigin, this, 3, inst);
			default: return null;
		}	
	}

}

// / * ------------ END INSTRUCTIONS FROM MODELING UNIT ------------ * / lineBreak?=LINE_BREAK?
protected class ResourceDeclaration_LineBreakAssignment_9 extends AssignmentToken  {
	
	public ResourceDeclaration_LineBreakAssignment_9(AbstractToken lastRuleCallOrigin, AbstractToken next, int transitionIndex, IEObjectConsumer eObjectConsumer) {
		super(lastRuleCallOrigin, next, transitionIndex, eObjectConsumer);
	}
	
	@Override
	public Assignment getGrammarElement() {
		return grammarAccess.getResourceDeclarationAccess().getLineBreakAssignment_9();
	}

    @Override
	public AbstractToken createFollower(int index, IEObjectConsumer inst) {
		switch(index) {
			case 0: return new ResourceDeclaration_RightCurlyBracketKeyword_8(lastRuleCallOrigin, this, 0, inst);
			default: return null;
		}	
	}

    @Override	
	public IEObjectConsumer tryConsume() {
		if((value = eObjectConsumer.getConsumable("lineBreak",false)) == null) return null;
		IEObjectConsumer obj = eObjectConsumer.cloneAndConsume("lineBreak");
		if(valueSerializer.isValid(obj.getEObject(), grammarAccess.getResourceDeclarationAccess().getLineBreakLINE_BREAKTerminalRuleCall_9_0(), value, null)) {
			type = AssignmentType.TERMINAL_RULE_CALL;
			element = grammarAccess.getResourceDeclarationAccess().getLineBreakLINE_BREAKTerminalRuleCall_9_0();
			return obj;
		}
		return null;
	}

}


/************ end Rule ResourceDeclaration ****************/

}
